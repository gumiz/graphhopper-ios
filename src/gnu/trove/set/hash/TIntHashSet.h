//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: dependencies/trove/src/gnu/trove/set/hash/TIntHashSet.java
//

#ifndef _GnuTroveSetHashTIntHashSet_H_
#define _GnuTroveSetHashTIntHashSet_H_

@class IOSIntArray;
@protocol GnuTroveTIntCollection;
@protocol JavaIoObjectInput;
@protocol JavaIoObjectOutput;
@protocol JavaUtilCollection;

#include "J2ObjC_header.h"
#include "gnu/trove/impl/hash/THashPrimitiveIterator.h"
#include "gnu/trove/impl/hash/TIntHash.h"
#include "gnu/trove/iterator/TIntIterator.h"
#include "gnu/trove/set/TIntSet.h"
#include "java/io/Externalizable.h"

#define GnuTroveSetHashTIntHashSet_serialVersionUID 1LL

/**
 @brief An open addressed set implementation for int primitives.
 @author Eric D. Friedman
 @author Rob Eden
 @author Jeff Randall
 */
@interface GnuTroveSetHashTIntHashSet : GnuTroveImplHashTIntHash < GnuTroveSetTIntSet, JavaIoExternalizable > {
}

/**
 @brief Creates a new <code>TIntHashSet</code> instance with the default capacity and load factor.
 */
- (instancetype)init;

/**
 @brief Creates a new <code>TIntHashSet</code> instance with a prime capacity equal to or greater than <tt>initialCapacity</tt> and with the default load factor.
 @param initialCapacity an <code>int</code> value
 */
- (instancetype)initWithInt:(jint)initialCapacity;

/**
 @brief Creates a new <code>TIntHash</code> instance with a prime value at or near the specified capacity and load factor.
 @param initialCapacity used to find a prime capacity for the table.
 @param load_factor used to calculate the threshold over which rehashing takes place.
 */
- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)load_factor;

/**
 @brief Creates a new <code>TIntHashSet</code> instance with a prime capacity equal to or greater than <tt>initial_capacity</tt> and with the specified load factor.
 @param initial_capacity an <code>int</code> value
 @param load_factor a <code>float</code> value
 @param no_entry_value a <code>int</code> value that represents null.
 */
- (instancetype)initWithInt:(jint)initial_capacity
                  withFloat:(jfloat)load_factor
                    withInt:(jint)no_entry_value;

/**
 @brief Creates a new <code>TIntHashSet</code> instance that is a copy of the existing Collection.
 @param collection a <tt>Collection</tt> that will be duplicated.
 */
- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 @brief Creates a new <code>TIntHashSet</code> instance that is a copy of the existing set.
 @param collection a <tt>TIntSet</tt> that will be duplicated.
 */
- (instancetype)initWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

/**
 @brief Creates a new <code>TIntHashSet</code> instance containing the elements of <tt>array</tt>.
 @param array an array of <code>int</code> primitives
 */
- (instancetype)initWithIntArray:(IOSIntArray *)array;

/**
 
 */
- (id<GnuTroveIteratorTIntIterator>)iterator;

/**
 
 */
- (IOSIntArray *)toArray;

/**
 
 */
- (IOSIntArray *)toArrayWithIntArray:(IOSIntArray *)dest;

/**
 
 */
- (jboolean)addWithInt:(jint)val;

/**
 
 */
- (jboolean)removeWithInt:(jint)val;

/**
 
 */
- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 
 */
- (jboolean)containsAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

/**
 
 */
- (jboolean)containsAllWithIntArray:(IOSIntArray *)array;

/**
 
 */
- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 
 */
- (jboolean)addAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

/**
 
 */
- (jboolean)addAllWithIntArray:(IOSIntArray *)array;

/**
 
 */
- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 
 */
- (jboolean)retainAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

/**
 
 */
- (jboolean)retainAllWithIntArray:(IOSIntArray *)array;

/**
 
 */
- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 
 */
- (jboolean)removeAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

/**
 
 */
- (jboolean)removeAllWithIntArray:(IOSIntArray *)array;

/**
 
 */
- (void)clear;

/**
 
 */
- (void)rehashWithInt:(jint)newCapacity;

/**
 
 */
- (jboolean)isEqual:(id)other;

/**
 
 */
- (NSUInteger)hash;

/**
 
 */
- (NSString *)description;

/**
 
 */
- (void)writeExternalWithJavaIoObjectOutput:(id<JavaIoObjectOutput>)outArg;

/**
 
 */
- (void)readExternalWithJavaIoObjectInput:(id<JavaIoObjectInput>)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveSetHashTIntHashSet)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(GnuTroveSetHashTIntHashSet, serialVersionUID, jlong)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveSetHashTIntHashSet)

@interface GnuTroveSetHashTIntHashSet_TIntHashIterator : GnuTroveImplHashTHashPrimitiveIterator < GnuTroveIteratorTIntIterator > {
}

/**
 
 */
- (instancetype)initWithGnuTroveSetHashTIntHashSet:(GnuTroveSetHashTIntHashSet *)outer$
                      withGnuTroveImplHashTIntHash:(GnuTroveImplHashTIntHash *)hash_;

/**
 
 */
- (jint)next;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveSetHashTIntHashSet_TIntHashIterator)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveSetHashTIntHashSet_TIntHashIterator)

#endif // _GnuTroveSetHashTIntHashSet_H_
