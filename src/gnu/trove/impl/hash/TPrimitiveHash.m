//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: dependencies/trove/src/gnu/trove/impl/hash/TPrimitiveHash.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "gnu/trove/impl/HashFunctions.h"
#include "gnu/trove/impl/hash/THash.h"
#include "gnu/trove/impl/hash/TPrimitiveHash.h"
#include "java/lang/Math.h"

@implementation GnuTroveImplHashTPrimitiveHash

- (instancetype)init {
  return [super init];
}

- (instancetype)initWithInt:(jint)initialCapacity {
  return [self initGnuTroveImplHashTPrimitiveHashWithInt:initialCapacity withFloat:GnuTroveImplHashTHash_DEFAULT_LOAD_FACTOR];
}

- (instancetype)initGnuTroveImplHashTPrimitiveHashWithInt:(jint)initialCapacity
                                                withFloat:(jfloat)loadFactor {
  if (self = [super init]) {
    initialCapacity = JavaLangMath_maxWithInt_withInt_(1, initialCapacity);
    _loadFactor_ = loadFactor;
    [self setUpWithInt:GnuTroveImplHashFunctions_fastCeilWithFloat_(initialCapacity / loadFactor)];
  }
  return self;
}

- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor {
  return [self initGnuTroveImplHashTPrimitiveHashWithInt:initialCapacity withFloat:loadFactor];
}

- (jint)capacity {
  return ((IOSByteArray *) nil_chk(_states_))->size_;
}

- (void)removeAtWithInt:(jint)index {
  *IOSByteArray_GetRef(nil_chk(_states_), index) = GnuTroveImplHashTPrimitiveHash_REMOVED;
  [super removeAtWithInt:index];
}

- (jint)setUpWithInt:(jint)initialCapacity {
  jint capacity;
  capacity = [super setUpWithInt:initialCapacity];
  GnuTroveImplHashTPrimitiveHash_setAndConsume__states_(self, [IOSByteArray newArrayWithLength:capacity]);
  return capacity;
}

- (void)dealloc {
  RELEASE_(_states_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(GnuTroveImplHashTPrimitiveHash *)other {
  [super copyAllFieldsTo:other];
  GnuTroveImplHashTPrimitiveHash_set__states_(other, _states_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "TPrimitiveHash", NULL, 0x1, NULL },
    { "initWithInt:", "TPrimitiveHash", NULL, 0x1, NULL },
    { "initWithInt:withFloat:", "TPrimitiveHash", NULL, 0x1, NULL },
    { "capacity", NULL, "I", 0x1, NULL },
    { "removeAtWithInt:", "removeAt", "V", 0x4, NULL },
    { "setUpWithInt:", "setUp", "I", 0x4, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x18, "J", NULL, .constantValue.asLong = GnuTroveImplHashTPrimitiveHash_serialVersionUID },
    { "_states_", NULL, 0x81, "[B", NULL,  },
    { "FREE_", NULL, 0x19, "B", NULL, .constantValue.asChar = GnuTroveImplHashTPrimitiveHash_FREE },
    { "FULL_", NULL, 0x19, "B", NULL, .constantValue.asChar = GnuTroveImplHashTPrimitiveHash_FULL },
    { "REMOVED_", NULL, 0x19, "B", NULL, .constantValue.asChar = GnuTroveImplHashTPrimitiveHash_REMOVED },
  };
  static const J2ObjcClassInfo _GnuTroveImplHashTPrimitiveHash = { 1, "TPrimitiveHash", "gnu.trove.impl.hash", NULL, 0x401, 6, methods, 5, fields, 0, NULL};
  return &_GnuTroveImplHashTPrimitiveHash;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GnuTroveImplHashTPrimitiveHash)
