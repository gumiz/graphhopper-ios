//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: dependencies/trove/src/gnu/trove/impl/hash/THashPrimitiveIterator.java
//

#ifndef _GnuTroveImplHashTHashPrimitiveIterator_H_
#define _GnuTroveImplHashTHashPrimitiveIterator_H_

@class GnuTroveImplHashTPrimitiveHash;

#include "J2ObjC_header.h"
#include "gnu/trove/iterator/TPrimitiveIterator.h"

/**
 @brief Implements all iterator functions for the hashed object set.
 Subclasses may override objectAtIndex to vary the object returned by calls to next() (e.g. for values, and Map.Entry objects). <p/> <p> Note that iteration is fastest if you forego the calls to <tt>hasNext</tt> in favor of checking the size of the structure yourself and then call next() that many times: <p/> <pre> Iterator i = collection.iterator(); for (int size = collection.size(); size-- > 0;) { Object o = i.next(); } </pre> <p/> <p>You may, of course, use the hasNext(), next() idiom too if you aren't in a performance critical spot.</p>
 */
@interface GnuTroveImplHashTHashPrimitiveIterator : NSObject < GnuTroveIteratorTPrimitiveIterator > {
 @public
  /**
   @brief the data structure this iterator traverses
   */
  GnuTroveImplHashTPrimitiveHash *_hash_;
  /**
   @brief the number of elements this iterator believes are in the data structure it accesses.
   */
  jint _expectedSize_;
  /**
   @brief the index used for iteration.
   */
  jint _index_;
}

/**
 @brief Creates a <tt>TPrimitiveIterator</tt> for the specified collection.
 @param hash the <tt>TPrimitiveHash</tt> we want to iterate over.
 */
- (instancetype)initWithGnuTroveImplHashTPrimitiveHash:(GnuTroveImplHashTPrimitiveHash *)hash_;

/**
 @brief Returns the index of the next value in the data structure or a negative value if the iterator is exhausted.
 @return an <code>int</code> value
 @throws java.util.ConcurrentModificationException if the underlying collection's size has been modified since the iterator was created.
 */
- (jint)nextIndex;

/**
 @brief Returns true if the iterator can be advanced past its current location.
 @return a <code>boolean</code> value
 */
- (jboolean)hasNext;

/**
 @brief Removes the last entry returned by the iterator.
 Invoking this method more than once for a single entry will leave the underlying data structure in a confused state.
 */
- (void)remove;

/**
 @brief Sets the internal <tt>index</tt> so that the `next' object can be returned.
 */
- (void)moveToNextIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveImplHashTHashPrimitiveIterator)

J2OBJC_FIELD_SETTER(GnuTroveImplHashTHashPrimitiveIterator, _hash_, GnuTroveImplHashTPrimitiveHash *)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveImplHashTHashPrimitiveIterator)

#endif // _GnuTroveImplHashTHashPrimitiveIterator_H_
