//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: dependencies/trove/src/gnu/trove/map/hash/TIntObjectHashMap.java
//

#ifndef _GnuTroveMapHashTIntObjectHashMap_H_
#define _GnuTroveMapHashTIntObjectHashMap_H_

@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@protocol GnuTroveFunctionTObjectFunction;
@protocol GnuTroveProcedureTIntProcedure;
@protocol GnuTroveProcedureTObjectProcedure;
@protocol GnuTroveTIntCollection;
@protocol JavaIoObjectInput;
@protocol JavaIoObjectOutput;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;

#include "J2ObjC_header.h"
#include "gnu/trove/impl/hash/THashPrimitiveIterator.h"
#include "gnu/trove/impl/hash/TIntHash.h"
#include "gnu/trove/iterator/TIntIterator.h"
#include "gnu/trove/iterator/TIntObjectIterator.h"
#include "gnu/trove/map/TIntObjectMap.h"
#include "gnu/trove/procedure/TIntObjectProcedure.h"
#include "gnu/trove/set/TIntSet.h"
#include "java/io/Externalizable.h"
#include "java/lang/Iterable.h"
#include "java/util/AbstractSet.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"

#define GnuTroveMapHashTIntObjectHashMap_serialVersionUID 1LL

/**
 @brief An open addressed Map implementation for int keys and Object values.
 Created: Sun Nov  4 08:52:45 2001
 @author Eric D. Friedman
 @author Rob Eden
 @author Jeff Randall
 */
@interface GnuTroveMapHashTIntObjectHashMap : GnuTroveImplHashTIntHash < GnuTroveMapTIntObjectMap, JavaIoExternalizable > {
 @public
  /**
   @brief the values of the map
   */
  IOSObjectArray *_values_;
  /**
   @brief the value that represents null in the key set.
   */
  jint no_entry_key_;
}

/**
 @brief Creates a new <code>TIntObjectHashMap</code> instance with the default capacity and load factor.
 */
- (instancetype)init;

/**
 @brief Creates a new <code>TIntObjectHashMap</code> instance with a prime capacity equal to or greater than <tt>initialCapacity</tt> and with the default load factor.
 @param initialCapacity an <code>int</code> value
 */
- (instancetype)initWithInt:(jint)initialCapacity;

/**
 @brief Creates a new <code>TIntObjectHashMap</code> instance with a prime capacity equal to or greater than <tt>initialCapacity</tt> and with the specified load factor.
 @param initialCapacity an <code>int</code> value
 @param loadFactor a <code>float</code> value
 */
- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor;

/**
 @brief Creates a new <code>TIntObjectHashMap</code> instance with a prime value at or near the specified capacity and load factor.
 @param initialCapacity used to find a prime capacity for the table.
 @param loadFactor used to calculate the threshold over which rehashing takes place.
 @param noEntryKey the value used to represent null in the key set.
 */
- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor
                    withInt:(jint)noEntryKey;

/**
 @brief Creates a new <code>TIntObjectHashMap</code> that contains the entries in the map passed to it.
 @param map the <tt>TIntObjectMap</tt> to be copied.
 */
- (instancetype)initWithGnuTroveMapTIntObjectMap:(id<GnuTroveMapTIntObjectMap>)map;

- (jint)setUpWithInt:(jint)initialCapacity;

- (void)rehashWithInt:(jint)newCapacity;

- (jint)getNoEntryKey;

- (jboolean)containsKeyWithInt:(jint)key;

- (jboolean)containsValueWithId:(id)val;

- (id)getWithInt:(jint)key;

- (id)putWithInt:(jint)key
          withId:(id)value;

- (id)putIfAbsentWithInt:(jint)key
                  withId:(id)value;

- (id)removeWithInt:(jint)key;

- (void)removeAtWithInt:(jint)index;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map;

- (void)putAllWithGnuTroveMapTIntObjectMap:(id<GnuTroveMapTIntObjectMap>)map;

- (void)clear;

- (id<GnuTroveSetTIntSet>)keySet;

- (IOSIntArray *)keys;

- (IOSIntArray *)keysWithIntArray:(IOSIntArray *)dest;

- (id<JavaUtilCollection>)valueCollection;

- (IOSObjectArray *)values;

- (IOSObjectArray *)valuesWithNSObjectArray:(IOSObjectArray *)dest;

- (id<GnuTroveIteratorTIntObjectIterator>)iterator;

- (jboolean)forEachKeyWithGnuTroveProcedureTIntProcedure:(id<GnuTroveProcedureTIntProcedure>)procedure;

- (jboolean)forEachValueWithGnuTroveProcedureTObjectProcedure:(id<GnuTroveProcedureTObjectProcedure>)procedure;

- (jboolean)forEachEntryWithGnuTroveProcedureTIntObjectProcedure:(id<GnuTroveProcedureTIntObjectProcedure>)procedure;

- (jboolean)retainEntriesWithGnuTroveProcedureTIntObjectProcedure:(id<GnuTroveProcedureTIntObjectProcedure>)procedure;

- (void)transformValuesWithGnuTroveFunctionTObjectFunction:(id<GnuTroveFunctionTObjectFunction>)function;

- (jboolean)isEqual:(id)other;

- (NSUInteger)hash;

- (void)writeExternalWithJavaIoObjectOutput:(id<JavaIoObjectOutput>)outArg;

- (void)readExternalWithJavaIoObjectInput:(id<JavaIoObjectInput>)inArg;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntObjectHashMap)

J2OBJC_FIELD_SETTER(GnuTroveMapHashTIntObjectHashMap, _values_, IOSObjectArray *)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(GnuTroveMapHashTIntObjectHashMap, serialVersionUID, jlong)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntObjectHashMap)

@interface GnuTroveMapHashTIntObjectHashMap_KeyView : NSObject < GnuTroveSetTIntSet > {
}

- (jint)getNoEntryValue;

- (jint)size;

- (jboolean)isEmpty;

- (jboolean)containsWithInt:(jint)entry_;

- (id<GnuTroveIteratorTIntIterator>)iterator;

- (IOSIntArray *)toArray;

- (IOSIntArray *)toArrayWithIntArray:(IOSIntArray *)dest;

- (jboolean)addWithInt:(jint)entry_;

- (jboolean)removeWithInt:(jint)entry_;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)containsAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

- (jboolean)containsAllWithIntArray:(IOSIntArray *)array;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)addAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

- (jboolean)addAllWithIntArray:(IOSIntArray *)array;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)retainAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

- (jboolean)retainAllWithIntArray:(IOSIntArray *)array;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)removeAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

- (jboolean)removeAllWithIntArray:(IOSIntArray *)array;

- (void)clear;

- (jboolean)forEachWithGnuTroveProcedureTIntProcedure:(id<GnuTroveProcedureTIntProcedure>)procedure;

- (jboolean)isEqual:(id)other;

- (NSUInteger)hash;

- (NSString *)description;

- (instancetype)initWithGnuTroveMapHashTIntObjectHashMap:(GnuTroveMapHashTIntObjectHashMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntObjectHashMap_KeyView)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntObjectHashMap_KeyView)

@interface GnuTroveMapHashTIntObjectHashMap_KeyView_TIntHashIterator : GnuTroveImplHashTHashPrimitiveIterator < GnuTroveIteratorTIntIterator > {
}

- (instancetype)initWithGnuTroveMapHashTIntObjectHashMap_KeyView:(GnuTroveMapHashTIntObjectHashMap_KeyView *)outer$
                                    withGnuTroveImplHashTIntHash:(GnuTroveImplHashTIntHash *)hash_;

- (jint)next;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntObjectHashMap_KeyView_TIntHashIterator)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntObjectHashMap_KeyView_TIntHashIterator)

@interface GnuTroveMapHashTIntObjectHashMap_MapBackedView : JavaUtilAbstractSet < JavaUtilSet, JavaLangIterable > {
}

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeElementWithId:(id)key;

- (jboolean)containsElementWithId:(id)key;

- (jboolean)containsWithId:(id)key;

- (jboolean)removeWithId:(id)o;

- (void)clear;

- (jboolean)addWithId:(id)obj;

- (jint)size;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;

- (jboolean)isEmpty;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (instancetype)initWithGnuTroveMapHashTIntObjectHashMap:(GnuTroveMapHashTIntObjectHashMap *)outer$;


@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntObjectHashMap_MapBackedView)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntObjectHashMap_MapBackedView)

/**
 @brief a view onto the values of the map.
 */
@interface GnuTroveMapHashTIntObjectHashMap_ValueView : GnuTroveMapHashTIntObjectHashMap_MapBackedView {
}

- (id<JavaUtilIterator>)iterator;

- (jboolean)containsElementWithId:(id)value;

- (jboolean)removeElementWithId:(id)value;

- (instancetype)initWithGnuTroveMapHashTIntObjectHashMap:(GnuTroveMapHashTIntObjectHashMap *)outer$;


@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntObjectHashMap_ValueView)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntObjectHashMap_ValueView)

@interface GnuTroveMapHashTIntObjectHashMap_ValueView_TIntObjectValueHashIterator : GnuTroveImplHashTHashPrimitiveIterator < JavaUtilIterator > {
 @public
  GnuTroveMapHashTIntObjectHashMap *_map_;
}

- (instancetype)initWithGnuTroveMapHashTIntObjectHashMap_ValueView:(GnuTroveMapHashTIntObjectHashMap_ValueView *)outer$
                              withGnuTroveMapHashTIntObjectHashMap:(GnuTroveMapHashTIntObjectHashMap *)map;

- (id)objectAtIndexWithInt:(jint)index;

- (id)next;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntObjectHashMap_ValueView_TIntObjectValueHashIterator)

J2OBJC_FIELD_SETTER(GnuTroveMapHashTIntObjectHashMap_ValueView_TIntObjectValueHashIterator, _map_, GnuTroveMapHashTIntObjectHashMap *)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntObjectHashMap_ValueView_TIntObjectValueHashIterator)

@interface GnuTroveMapHashTIntObjectHashMap_ValueView_$1 : GnuTroveMapHashTIntObjectHashMap_ValueView_TIntObjectValueHashIterator {
}

- (id)objectAtIndexWithInt:(jint)index;

- (instancetype)initWithGnuTroveMapHashTIntObjectHashMap_ValueView:(GnuTroveMapHashTIntObjectHashMap_ValueView *)outer$
                              withGnuTroveMapHashTIntObjectHashMap:(GnuTroveMapHashTIntObjectHashMap *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntObjectHashMap_ValueView_$1)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntObjectHashMap_ValueView_$1)

@interface GnuTroveMapHashTIntObjectHashMap_TIntObjectHashIterator : GnuTroveImplHashTHashPrimitiveIterator < GnuTroveIteratorTIntObjectIterator > {
}

/**
 @brief Creates an iterator over the specified map
 @param map map to iterate over.
 */
- (instancetype)initWithGnuTroveMapHashTIntObjectHashMap:(GnuTroveMapHashTIntObjectHashMap *)outer$
                    withGnuTroveMapHashTIntObjectHashMap:(GnuTroveMapHashTIntObjectHashMap *)map;

- (void)advance;

- (jint)key;

- (id)value;

- (id)setValueWithId:(id)val;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntObjectHashMap_TIntObjectHashIterator)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntObjectHashMap_TIntObjectHashIterator)

@interface GnuTroveMapHashTIntObjectHashMap_$1 : NSObject < GnuTroveProcedureTIntObjectProcedure > {
}

- (jboolean)executeWithInt:(jint)key
                    withId:(id)value;

- (instancetype)initWithGnuTroveMapHashTIntObjectHashMap:(GnuTroveMapHashTIntObjectHashMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntObjectHashMap_$1)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntObjectHashMap_$1)

@interface GnuTroveMapHashTIntObjectHashMap_$2 : NSObject < GnuTroveProcedureTIntObjectProcedure > {
}

- (jboolean)executeWithInt:(jint)key
                    withId:(id)value;

- (instancetype)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntObjectHashMap_$2)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntObjectHashMap_$2)

#endif // _GnuTroveMapHashTIntObjectHashMap_H_
