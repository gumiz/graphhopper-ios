//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: dependencies/trove/src/gnu/trove/map/hash/TLongObjectHashMap.java
//

#ifndef _GnuTroveMapHashTLongObjectHashMap_H_
#define _GnuTroveMapHashTLongObjectHashMap_H_

@class IOSLongArray;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@protocol GnuTroveFunctionTObjectFunction;
@protocol GnuTroveProcedureTLongProcedure;
@protocol GnuTroveProcedureTObjectProcedure;
@protocol GnuTroveTLongCollection;
@protocol JavaIoObjectInput;
@protocol JavaIoObjectOutput;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;

#include "J2ObjC_header.h"
#include "gnu/trove/impl/hash/THashPrimitiveIterator.h"
#include "gnu/trove/impl/hash/TLongHash.h"
#include "gnu/trove/iterator/TLongIterator.h"
#include "gnu/trove/iterator/TLongObjectIterator.h"
#include "gnu/trove/map/TLongObjectMap.h"
#include "gnu/trove/procedure/TLongObjectProcedure.h"
#include "gnu/trove/set/TLongSet.h"
#include "java/io/Externalizable.h"
#include "java/lang/Iterable.h"
#include "java/util/AbstractSet.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"

#define GnuTroveMapHashTLongObjectHashMap_serialVersionUID 1LL

/**
 @brief An open addressed Map implementation for long keys and Object values.
 Created: Sun Nov  4 08:52:45 2001
 @author Eric D. Friedman
 @author Rob Eden
 @author Jeff Randall
 */
@interface GnuTroveMapHashTLongObjectHashMap : GnuTroveImplHashTLongHash < GnuTroveMapTLongObjectMap, JavaIoExternalizable > {
 @public
  /**
   @brief the values of the map
   */
  IOSObjectArray *_values_;
  /**
   @brief the value that represents null in the key set.
   */
  jlong no_entry_key_;
}

/**
 @brief Creates a new <code>TLongObjectHashMap</code> instance with the default capacity and load factor.
 */
- (instancetype)init;

/**
 @brief Creates a new <code>TLongObjectHashMap</code> instance with a prime capacity equal to or greater than <tt>initialCapacity</tt> and with the default load factor.
 @param initialCapacity an <code>int</code> value
 */
- (instancetype)initWithInt:(jint)initialCapacity;

/**
 @brief Creates a new <code>TLongObjectHashMap</code> instance with a prime capacity equal to or greater than <tt>initialCapacity</tt> and with the specified load factor.
 @param initialCapacity an <code>int</code> value
 @param loadFactor a <code>float</code> value
 */
- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor;

/**
 @brief Creates a new <code>TLongObjectHashMap</code> instance with a prime value at or near the specified capacity and load factor.
 @param initialCapacity used to find a prime capacity for the table.
 @param loadFactor used to calculate the threshold over which rehashing takes place.
 @param noEntryKey the value used to represent null in the key set.
 */
- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor
                   withLong:(jlong)noEntryKey;

/**
 @brief Creates a new <code>TLongObjectHashMap</code> that contains the entries in the map passed to it.
 @param map the <tt>TLongObjectMap</tt> to be copied.
 */
- (instancetype)initWithGnuTroveMapTLongObjectMap:(id<GnuTroveMapTLongObjectMap>)map;

- (jint)setUpWithInt:(jint)initialCapacity;

- (void)rehashWithInt:(jint)newCapacity;

- (jlong)getNoEntryKey;

- (jboolean)containsKeyWithLong:(jlong)key;

- (jboolean)containsValueWithId:(id)val;

- (id)getWithLong:(jlong)key;

- (id)putWithLong:(jlong)key
           withId:(id)value;

- (id)putIfAbsentWithLong:(jlong)key
                   withId:(id)value;

- (id)removeWithLong:(jlong)key;

- (void)removeAtWithInt:(jint)index;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map;

- (void)putAllWithGnuTroveMapTLongObjectMap:(id<GnuTroveMapTLongObjectMap>)map;

- (void)clear;

- (id<GnuTroveSetTLongSet>)keySet;

- (IOSLongArray *)keys;

- (IOSLongArray *)keysWithLongArray:(IOSLongArray *)dest;

- (id<JavaUtilCollection>)valueCollection;

- (IOSObjectArray *)values;

- (IOSObjectArray *)valuesWithNSObjectArray:(IOSObjectArray *)dest;

- (id<GnuTroveIteratorTLongObjectIterator>)iterator;

- (jboolean)forEachKeyWithGnuTroveProcedureTLongProcedure:(id<GnuTroveProcedureTLongProcedure>)procedure;

- (jboolean)forEachValueWithGnuTroveProcedureTObjectProcedure:(id<GnuTroveProcedureTObjectProcedure>)procedure;

- (jboolean)forEachEntryWithGnuTroveProcedureTLongObjectProcedure:(id<GnuTroveProcedureTLongObjectProcedure>)procedure;

- (jboolean)retainEntriesWithGnuTroveProcedureTLongObjectProcedure:(id<GnuTroveProcedureTLongObjectProcedure>)procedure;

- (void)transformValuesWithGnuTroveFunctionTObjectFunction:(id<GnuTroveFunctionTObjectFunction>)function;

- (jboolean)isEqual:(id)other;

- (NSUInteger)hash;

- (void)writeExternalWithJavaIoObjectOutput:(id<JavaIoObjectOutput>)outArg;

- (void)readExternalWithJavaIoObjectInput:(id<JavaIoObjectInput>)inArg;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTLongObjectHashMap)

J2OBJC_FIELD_SETTER(GnuTroveMapHashTLongObjectHashMap, _values_, IOSObjectArray *)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(GnuTroveMapHashTLongObjectHashMap, serialVersionUID, jlong)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTLongObjectHashMap)

@interface GnuTroveMapHashTLongObjectHashMap_KeyView : NSObject < GnuTroveSetTLongSet > {
}

- (jlong)getNoEntryValue;

- (jint)size;

- (jboolean)isEmpty;

- (jboolean)containsWithLong:(jlong)entry_;

- (id<GnuTroveIteratorTLongIterator>)iterator;

- (IOSLongArray *)toArray;

- (IOSLongArray *)toArrayWithLongArray:(IOSLongArray *)dest;

- (jboolean)addWithLong:(jlong)entry_;

- (jboolean)removeWithLong:(jlong)entry_;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)containsAllWithGnuTroveTLongCollection:(id<GnuTroveTLongCollection>)collection;

- (jboolean)containsAllWithLongArray:(IOSLongArray *)array;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)addAllWithGnuTroveTLongCollection:(id<GnuTroveTLongCollection>)collection;

- (jboolean)addAllWithLongArray:(IOSLongArray *)array;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)retainAllWithGnuTroveTLongCollection:(id<GnuTroveTLongCollection>)collection;

- (jboolean)retainAllWithLongArray:(IOSLongArray *)array;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)removeAllWithGnuTroveTLongCollection:(id<GnuTroveTLongCollection>)collection;

- (jboolean)removeAllWithLongArray:(IOSLongArray *)array;

- (void)clear;

- (jboolean)forEachWithGnuTroveProcedureTLongProcedure:(id<GnuTroveProcedureTLongProcedure>)procedure;

- (jboolean)isEqual:(id)other;

- (NSUInteger)hash;

- (NSString *)description;

- (instancetype)initWithGnuTroveMapHashTLongObjectHashMap:(GnuTroveMapHashTLongObjectHashMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTLongObjectHashMap_KeyView)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTLongObjectHashMap_KeyView)

@interface GnuTroveMapHashTLongObjectHashMap_KeyView_TLongHashIterator : GnuTroveImplHashTHashPrimitiveIterator < GnuTroveIteratorTLongIterator > {
}

- (instancetype)initWithGnuTroveMapHashTLongObjectHashMap_KeyView:(GnuTroveMapHashTLongObjectHashMap_KeyView *)outer$
                                    withGnuTroveImplHashTLongHash:(GnuTroveImplHashTLongHash *)hash_;

- (jlong)next;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTLongObjectHashMap_KeyView_TLongHashIterator)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTLongObjectHashMap_KeyView_TLongHashIterator)

@interface GnuTroveMapHashTLongObjectHashMap_MapBackedView : JavaUtilAbstractSet < JavaUtilSet, JavaLangIterable > {
}

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeElementWithId:(id)key;

- (jboolean)containsElementWithId:(id)key;

- (jboolean)containsWithId:(id)key;

- (jboolean)removeWithId:(id)o;

- (void)clear;

- (jboolean)addWithId:(id)obj;

- (jint)size;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;

- (jboolean)isEmpty;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (instancetype)initWithGnuTroveMapHashTLongObjectHashMap:(GnuTroveMapHashTLongObjectHashMap *)outer$;


@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTLongObjectHashMap_MapBackedView)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTLongObjectHashMap_MapBackedView)

/**
 @brief a view onto the values of the map.
 */
@interface GnuTroveMapHashTLongObjectHashMap_ValueView : GnuTroveMapHashTLongObjectHashMap_MapBackedView {
}

- (id<JavaUtilIterator>)iterator;

- (jboolean)containsElementWithId:(id)value;

- (jboolean)removeElementWithId:(id)value;

- (instancetype)initWithGnuTroveMapHashTLongObjectHashMap:(GnuTroveMapHashTLongObjectHashMap *)outer$;


@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTLongObjectHashMap_ValueView)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTLongObjectHashMap_ValueView)

@interface GnuTroveMapHashTLongObjectHashMap_ValueView_TLongObjectValueHashIterator : GnuTroveImplHashTHashPrimitiveIterator < JavaUtilIterator > {
 @public
  GnuTroveMapHashTLongObjectHashMap *_map_;
}

- (instancetype)initWithGnuTroveMapHashTLongObjectHashMap_ValueView:(GnuTroveMapHashTLongObjectHashMap_ValueView *)outer$
                              withGnuTroveMapHashTLongObjectHashMap:(GnuTroveMapHashTLongObjectHashMap *)map;

- (id)objectAtIndexWithInt:(jint)index;

- (id)next;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTLongObjectHashMap_ValueView_TLongObjectValueHashIterator)

J2OBJC_FIELD_SETTER(GnuTroveMapHashTLongObjectHashMap_ValueView_TLongObjectValueHashIterator, _map_, GnuTroveMapHashTLongObjectHashMap *)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTLongObjectHashMap_ValueView_TLongObjectValueHashIterator)

@interface GnuTroveMapHashTLongObjectHashMap_ValueView_$1 : GnuTroveMapHashTLongObjectHashMap_ValueView_TLongObjectValueHashIterator {
}

- (id)objectAtIndexWithInt:(jint)index;

- (instancetype)initWithGnuTroveMapHashTLongObjectHashMap_ValueView:(GnuTroveMapHashTLongObjectHashMap_ValueView *)outer$
                              withGnuTroveMapHashTLongObjectHashMap:(GnuTroveMapHashTLongObjectHashMap *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTLongObjectHashMap_ValueView_$1)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTLongObjectHashMap_ValueView_$1)

@interface GnuTroveMapHashTLongObjectHashMap_TLongObjectHashIterator : GnuTroveImplHashTHashPrimitiveIterator < GnuTroveIteratorTLongObjectIterator > {
}

/**
 @brief Creates an iterator over the specified map
 @param map map to iterate over.
 */
- (instancetype)initWithGnuTroveMapHashTLongObjectHashMap:(GnuTroveMapHashTLongObjectHashMap *)outer$
                    withGnuTroveMapHashTLongObjectHashMap:(GnuTroveMapHashTLongObjectHashMap *)map;

- (void)advance;

- (jlong)key;

- (id)value;

- (id)setValueWithId:(id)val;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTLongObjectHashMap_TLongObjectHashIterator)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTLongObjectHashMap_TLongObjectHashIterator)

@interface GnuTroveMapHashTLongObjectHashMap_$1 : NSObject < GnuTroveProcedureTLongObjectProcedure > {
}

- (jboolean)executeWithLong:(jlong)key
                     withId:(id)value;

- (instancetype)initWithGnuTroveMapHashTLongObjectHashMap:(GnuTroveMapHashTLongObjectHashMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTLongObjectHashMap_$1)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTLongObjectHashMap_$1)

@interface GnuTroveMapHashTLongObjectHashMap_$2 : NSObject < GnuTroveProcedureTLongObjectProcedure > {
}

- (jboolean)executeWithLong:(jlong)key
                     withId:(id)value;

- (instancetype)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTLongObjectHashMap_$2)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTLongObjectHashMap_$2)

#endif // _GnuTroveMapHashTLongObjectHashMap_H_
