//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: dependencies/trove/src/gnu/trove/map/hash/TIntLongHashMap.java
//

#ifndef _GnuTroveMapHashTIntLongHashMap_H_
#define _GnuTroveMapHashTIntLongHashMap_H_

@class GnuTroveImplHashTPrimitiveHash;
@class IOSIntArray;
@class IOSLongArray;
@class JavaLangStringBuilder;
@protocol GnuTroveFunctionTLongFunction;
@protocol GnuTroveTIntCollection;
@protocol JavaIoObjectInput;
@protocol JavaIoObjectOutput;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;

#include "J2ObjC_header.h"
#include "gnu/trove/TLongCollection.h"
#include "gnu/trove/impl/hash/THashPrimitiveIterator.h"
#include "gnu/trove/impl/hash/TIntLongHash.h"
#include "gnu/trove/iterator/TIntIterator.h"
#include "gnu/trove/iterator/TIntLongIterator.h"
#include "gnu/trove/iterator/TLongIterator.h"
#include "gnu/trove/map/TIntLongMap.h"
#include "gnu/trove/procedure/TIntLongProcedure.h"
#include "gnu/trove/procedure/TIntProcedure.h"
#include "gnu/trove/procedure/TLongProcedure.h"
#include "gnu/trove/set/TIntSet.h"
#include "java/io/Externalizable.h"

#define GnuTroveMapHashTIntLongHashMap_serialVersionUID 1LL

/**
 @brief An open addressed Map implementation for int keys and long values.
 @author Eric D. Friedman
 @author Rob Eden
 @author Jeff Randall
 @version $Id: _K__V_HashMap.template,v 1.1.2.16 2010/03/02 04:09:50 robeden Exp $
 */
@interface GnuTroveMapHashTIntLongHashMap : GnuTroveImplHashTIntLongHash < GnuTroveMapTIntLongMap, JavaIoExternalizable > {
 @public
  /**
   @brief the values of the map
   */
  IOSLongArray *_values_;
}

/**
 @brief Creates a new <code>TIntLongHashMap</code> instance with the default capacity and load factor.
 */
- (instancetype)init;

/**
 @brief Creates a new <code>TIntLongHashMap</code> instance with a prime capacity equal to or greater than <tt>initialCapacity</tt> and with the default load factor.
 @param initialCapacity an <code>int</code> value
 */
- (instancetype)initWithInt:(jint)initialCapacity;

/**
 @brief Creates a new <code>TIntLongHashMap</code> instance with a prime capacity equal to or greater than <tt>initialCapacity</tt> and with the specified load factor.
 @param initialCapacity an <code>int</code> value
 @param loadFactor a <code>float</code> value
 */
- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor;

/**
 @brief Creates a new <code>TIntLongHashMap</code> instance with a prime capacity equal to or greater than <tt>initialCapacity</tt> and with the specified load factor.
 @param initialCapacity an <code>int</code> value
 @param loadFactor a <code>float</code> value
 @param noEntryKey a <code>int</code> value that represents <tt>null</tt> for the Key set.
 @param noEntryValue a <code>long</code> value that represents <tt>null</tt> for the Value set.
 */
- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor
                    withInt:(jint)noEntryKey
                   withLong:(jlong)noEntryValue;

/**
 @brief Creates a new <code>TIntLongHashMap</code> instance containing all of the entries in the map passed in.
 @param keys a <tt>int</tt> array containing the keys for the matching values.
 @param values a <tt>long</tt> array containing the values.
 */
- (instancetype)initWithIntArray:(IOSIntArray *)keys
                   withLongArray:(IOSLongArray *)values;

/**
 @brief Creates a new <code>TIntLongHashMap</code> instance containing all of the entries in the map passed in.
 @param map a <tt>TIntLongMap</tt> that will be duplicated.
 */
- (instancetype)initWithGnuTroveMapTIntLongMap:(id<GnuTroveMapTIntLongMap>)map;

/**
 @brief initializes the hashtable to a prime capacity which is at least <tt>initialCapacity + 1</tt>.
 @param initialCapacity an <code>int</code> value
 @return the actual capacity chosen
 */
- (jint)setUpWithInt:(jint)initialCapacity;

/**
 
 */
- (void)rehashWithInt:(jint)newCapacity;

/**
 
 */
- (jlong)putWithInt:(jint)key
           withLong:(jlong)value;

/**
 
 */
- (jlong)putIfAbsentWithInt:(jint)key
                   withLong:(jlong)value;

/**
 
 */
- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map;

/**
 
 */
- (void)putAllWithGnuTroveMapTIntLongMap:(id<GnuTroveMapTIntLongMap>)map;

/**
 
 */
- (jlong)getWithInt:(jint)key;

/**
 
 */
- (void)clear;

/**
 
 */
- (jboolean)isEmpty;

/**
 
 */
- (jlong)removeWithInt:(jint)key;

/**
 
 */
- (void)removeAtWithInt:(jint)index;

/**
 
 */
- (id<GnuTroveSetTIntSet>)keySet;

/**
 
 */
- (IOSIntArray *)keys;

/**
 
 */
- (IOSIntArray *)keysWithIntArray:(IOSIntArray *)array;

/**
 
 */
- (id<GnuTroveTLongCollection>)valueCollection;

/**
 
 */
- (IOSLongArray *)values;

/**
 
 */
- (IOSLongArray *)valuesWithLongArray:(IOSLongArray *)array;

/**
 
 */
- (jboolean)containsValueWithLong:(jlong)val;

/**
 
 */
- (jboolean)containsKeyWithInt:(jint)key;

/**
 
 */
- (id<GnuTroveIteratorTIntLongIterator>)iterator;

/**
 
 */
- (jboolean)forEachKeyWithGnuTroveProcedureTIntProcedure:(id<GnuTroveProcedureTIntProcedure>)procedure;

/**
 
 */
- (jboolean)forEachValueWithGnuTroveProcedureTLongProcedure:(id<GnuTroveProcedureTLongProcedure>)procedure;

/**
 
 */
- (jboolean)forEachEntryWithGnuTroveProcedureTIntLongProcedure:(id<GnuTroveProcedureTIntLongProcedure>)procedure;

/**
 
 */
- (void)transformValuesWithGnuTroveFunctionTLongFunction:(id<GnuTroveFunctionTLongFunction>)function;

/**
 
 */
- (jboolean)retainEntriesWithGnuTroveProcedureTIntLongProcedure:(id<GnuTroveProcedureTIntLongProcedure>)procedure;

/**
 
 */
- (jboolean)incrementWithInt:(jint)key;

/**
 
 */
- (jboolean)adjustValueWithInt:(jint)key
                      withLong:(jlong)amount;

/**
 
 */
- (jlong)adjustOrPutValueWithInt:(jint)key
                        withLong:(jlong)adjust_amount
                        withLong:(jlong)put_amount;

/**
 
 */
- (jboolean)isEqual:(id)other;

/**
 
 */
- (NSUInteger)hash;

/**
 
 */
- (NSString *)description;

/**
 
 */
- (void)writeExternalWithJavaIoObjectOutput:(id<JavaIoObjectOutput>)outArg;

/**
 
 */
- (void)readExternalWithJavaIoObjectInput:(id<JavaIoObjectInput>)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntLongHashMap)

J2OBJC_FIELD_SETTER(GnuTroveMapHashTIntLongHashMap, _values_, IOSLongArray *)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(GnuTroveMapHashTIntLongHashMap, serialVersionUID, jlong)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntLongHashMap)

/**
 @brief a view onto the keys of the map.
 */
@interface GnuTroveMapHashTIntLongHashMap_TKeyView : NSObject < GnuTroveSetTIntSet > {
}

/**
 
 */
- (id<GnuTroveIteratorTIntIterator>)iterator;

/**
 
 */
- (jint)getNoEntryValue;

/**
 
 */
- (jint)size;

/**
 
 */
- (jboolean)isEmpty;

/**
 
 */
- (jboolean)containsWithInt:(jint)entry_;

/**
 
 */
- (IOSIntArray *)toArray;

/**
 
 */
- (IOSIntArray *)toArrayWithIntArray:(IOSIntArray *)dest;

/**
 @brief Unsupported when operating upon a Key Set view of a TIntLongMap <p/>
 */
- (jboolean)addWithInt:(jint)entry_;

/**
 
 */
- (jboolean)removeWithInt:(jint)entry_;

/**
 
 */
- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 
 */
- (jboolean)containsAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

/**
 
 */
- (jboolean)containsAllWithIntArray:(IOSIntArray *)array;

/**
 @brief Unsupported when operating upon a Key Set view of a TIntLongMap <p/>
 */
- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 @brief Unsupported when operating upon a Key Set view of a TIntLongMap <p/>
 */
- (jboolean)addAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

/**
 @brief Unsupported when operating upon a Key Set view of a TIntLongMap <p/>
 */
- (jboolean)addAllWithIntArray:(IOSIntArray *)array;

/**
 
 */
- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 
 */
- (jboolean)retainAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

/**
 
 */
- (jboolean)retainAllWithIntArray:(IOSIntArray *)array;

/**
 
 */
- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 
 */
- (jboolean)removeAllWithGnuTroveTIntCollection:(id<GnuTroveTIntCollection>)collection;

/**
 
 */
- (jboolean)removeAllWithIntArray:(IOSIntArray *)array;

/**
 
 */
- (void)clear;

/**
 
 */
- (jboolean)forEachWithGnuTroveProcedureTIntProcedure:(id<GnuTroveProcedureTIntProcedure>)procedure;

- (jboolean)isEqual:(id)other;

- (NSUInteger)hash;

- (NSString *)description;

- (instancetype)initWithGnuTroveMapHashTIntLongHashMap:(GnuTroveMapHashTIntLongHashMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntLongHashMap_TKeyView)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntLongHashMap_TKeyView)

@interface GnuTroveMapHashTIntLongHashMap_TKeyView_$1 : NSObject < GnuTroveProcedureTIntProcedure > {
}

- (jboolean)executeWithInt:(jint)key;

- (instancetype)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntLongHashMap_TKeyView_$1)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntLongHashMap_TKeyView_$1)

/**
 @brief a view onto the values of the map.
 */
@interface GnuTroveMapHashTIntLongHashMap_TValueView : NSObject < GnuTroveTLongCollection > {
}

/**
 
 */
- (id<GnuTroveIteratorTLongIterator>)iterator;

/**
 
 */
- (jlong)getNoEntryValue;

/**
 
 */
- (jint)size;

/**
 
 */
- (jboolean)isEmpty;

/**
 
 */
- (jboolean)containsWithLong:(jlong)entry_;

/**
 
 */
- (IOSLongArray *)toArray;

/**
 
 */
- (IOSLongArray *)toArrayWithLongArray:(IOSLongArray *)dest;

- (jboolean)addWithLong:(jlong)entry_;

/**
 
 */
- (jboolean)removeWithLong:(jlong)entry_;

/**
 
 */
- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 
 */
- (jboolean)containsAllWithGnuTroveTLongCollection:(id<GnuTroveTLongCollection>)collection;

/**
 
 */
- (jboolean)containsAllWithLongArray:(IOSLongArray *)array;

/**
 
 */
- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 
 */
- (jboolean)addAllWithGnuTroveTLongCollection:(id<GnuTroveTLongCollection>)collection;

/**
 
 */
- (jboolean)addAllWithLongArray:(IOSLongArray *)array;

/**
 
 */
- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 
 */
- (jboolean)retainAllWithGnuTroveTLongCollection:(id<GnuTroveTLongCollection>)collection;

/**
 
 */
- (jboolean)retainAllWithLongArray:(IOSLongArray *)array;

/**
 
 */
- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/**
 
 */
- (jboolean)removeAllWithGnuTroveTLongCollection:(id<GnuTroveTLongCollection>)collection;

/**
 
 */
- (jboolean)removeAllWithLongArray:(IOSLongArray *)array;

/**
 
 */
- (void)clear;

/**
 
 */
- (jboolean)forEachWithGnuTroveProcedureTLongProcedure:(id<GnuTroveProcedureTLongProcedure>)procedure;

/**
 
 */
- (NSString *)description;

- (instancetype)initWithGnuTroveMapHashTIntLongHashMap:(GnuTroveMapHashTIntLongHashMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntLongHashMap_TValueView)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntLongHashMap_TValueView)

@interface GnuTroveMapHashTIntLongHashMap_TValueView_$1 : NSObject < GnuTroveProcedureTLongProcedure > {
}

- (jboolean)executeWithLong:(jlong)value;

- (instancetype)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntLongHashMap_TValueView_$1)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntLongHashMap_TValueView_$1)

@interface GnuTroveMapHashTIntLongHashMap_TIntLongKeyHashIterator : GnuTroveImplHashTHashPrimitiveIterator < GnuTroveIteratorTIntIterator > {
}

/**
 @brief Creates an iterator over the specified map
 @param hash the <tt>TPrimitiveHash</tt> we will be iterating over.
 */
- (instancetype)initWithGnuTroveMapHashTIntLongHashMap:(GnuTroveMapHashTIntLongHashMap *)outer$
                    withGnuTroveImplHashTPrimitiveHash:(GnuTroveImplHashTPrimitiveHash *)hash_;

/**
 
 */
- (jint)next;

/**
 }
 */
- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntLongHashMap_TIntLongKeyHashIterator)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntLongHashMap_TIntLongKeyHashIterator)

@interface GnuTroveMapHashTIntLongHashMap_TIntLongValueHashIterator : GnuTroveImplHashTHashPrimitiveIterator < GnuTroveIteratorTLongIterator > {
}

/**
 @brief Creates an iterator over the specified map
 @param hash the <tt>TPrimitiveHash</tt> we will be iterating over.
 */
- (instancetype)initWithGnuTroveMapHashTIntLongHashMap:(GnuTroveMapHashTIntLongHashMap *)outer$
                    withGnuTroveImplHashTPrimitiveHash:(GnuTroveImplHashTPrimitiveHash *)hash_;

/**
 
 */
- (jlong)next;

/**
 }
 */
- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntLongHashMap_TIntLongValueHashIterator)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntLongHashMap_TIntLongValueHashIterator)

@interface GnuTroveMapHashTIntLongHashMap_TIntLongHashIterator : GnuTroveImplHashTHashPrimitiveIterator < GnuTroveIteratorTIntLongIterator > {
}

/**
 @brief Creates an iterator over the specified map
 @param map the <tt>TIntLongHashMap</tt> we will be iterating over.
 */
- (instancetype)initWithGnuTroveMapHashTIntLongHashMap:(GnuTroveMapHashTIntLongHashMap *)outer$
                    withGnuTroveMapHashTIntLongHashMap:(GnuTroveMapHashTIntLongHashMap *)map;

/**
 
 */
- (void)advance;

/**
 
 */
- (jint)key;

/**
 
 */
- (jlong)value;

/**
 
 */
- (jlong)setValueWithLong:(jlong)val;

/**
 }
 */
- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntLongHashMap_TIntLongHashIterator)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntLongHashMap_TIntLongHashIterator)

@interface GnuTroveMapHashTIntLongHashMap_$1 : NSObject < GnuTroveProcedureTIntLongProcedure > {
}

- (jboolean)executeWithInt:(jint)key
                  withLong:(jlong)value;

- (instancetype)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(GnuTroveMapHashTIntLongHashMap_$1)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GnuTroveMapHashTIntLongHashMap_$1)

#endif // _GnuTroveMapHashTIntLongHashMap_H_
