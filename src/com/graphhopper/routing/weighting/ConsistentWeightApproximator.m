//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/weighting/ConsistentWeightApproximator.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/routing/weighting/ConsistentWeightApproximator.h"
#include "com/graphhopper/routing/weighting/WeightApproximator.h"

@interface ComGraphhopperRoutingWeightingConsistentWeightApproximator () {
 @public
  id<ComGraphhopperRoutingWeightingWeightApproximator> uniDirApproximatorForward_, uniDirApproximatorReverse_;
}
@end

J2OBJC_FIELD_SETTER(ComGraphhopperRoutingWeightingConsistentWeightApproximator, uniDirApproximatorForward_, id<ComGraphhopperRoutingWeightingWeightApproximator>)
J2OBJC_FIELD_SETTER(ComGraphhopperRoutingWeightingConsistentWeightApproximator, uniDirApproximatorReverse_, id<ComGraphhopperRoutingWeightingWeightApproximator>)

@implementation ComGraphhopperRoutingWeightingConsistentWeightApproximator

- (instancetype)initWithComGraphhopperRoutingWeightingWeightApproximator:(id<ComGraphhopperRoutingWeightingWeightApproximator>)weightApprox {
  if (self = [super init]) {
    ComGraphhopperRoutingWeightingConsistentWeightApproximator_set_uniDirApproximatorForward_(self, weightApprox);
    ComGraphhopperRoutingWeightingConsistentWeightApproximator_set_uniDirApproximatorReverse_(self, [((id<ComGraphhopperRoutingWeightingWeightApproximator>) nil_chk(weightApprox)) duplicate]);
  }
  return self;
}

- (void)setSourceNodeWithInt:(jint)sourceNode {
  [((id<ComGraphhopperRoutingWeightingWeightApproximator>) nil_chk(uniDirApproximatorReverse_)) setGoalNodeWithInt:sourceNode];
}

- (void)setGoalNodeWithInt:(jint)goalNode {
  [((id<ComGraphhopperRoutingWeightingWeightApproximator>) nil_chk(uniDirApproximatorForward_)) setGoalNodeWithInt:goalNode];
}

- (jdouble)approximateWithInt:(jint)fromNode
                  withBoolean:(jboolean)reverse {
  jdouble weightApproximation = 0.5 * ([((id<ComGraphhopperRoutingWeightingWeightApproximator>) nil_chk(uniDirApproximatorForward_)) approximateWithInt:fromNode] - [((id<ComGraphhopperRoutingWeightingWeightApproximator>) nil_chk(uniDirApproximatorReverse_)) approximateWithInt:fromNode]);
  if (reverse) return -weightApproximation;
  return weightApproximation;
}

- (void)dealloc {
  RELEASE_(uniDirApproximatorForward_);
  RELEASE_(uniDirApproximatorReverse_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ComGraphhopperRoutingWeightingConsistentWeightApproximator *)other {
  [super copyAllFieldsTo:other];
  ComGraphhopperRoutingWeightingConsistentWeightApproximator_set_uniDirApproximatorForward_(other, uniDirApproximatorForward_);
  ComGraphhopperRoutingWeightingConsistentWeightApproximator_set_uniDirApproximatorReverse_(other, uniDirApproximatorReverse_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComGraphhopperRoutingWeightingWeightApproximator:", "ConsistentWeightApproximator", NULL, 0x1, NULL },
    { "setSourceNodeWithInt:", "setSourceNode", "V", 0x1, NULL },
    { "setGoalNodeWithInt:", "setGoalNode", "V", 0x1, NULL },
    { "approximateWithInt:withBoolean:", "approximate", "D", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "uniDirApproximatorForward_", NULL, 0x12, "Lcom.graphhopper.routing.weighting.WeightApproximator;", NULL,  },
    { "uniDirApproximatorReverse_", NULL, 0x12, "Lcom.graphhopper.routing.weighting.WeightApproximator;", NULL,  },
  };
  static const J2ObjcClassInfo _ComGraphhopperRoutingWeightingConsistentWeightApproximator = { 1, "ConsistentWeightApproximator", "com.graphhopper.routing.weighting", NULL, 0x1, 4, methods, 2, fields, 0, NULL};
  return &_ComGraphhopperRoutingWeightingConsistentWeightApproximator;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGraphhopperRoutingWeightingConsistentWeightApproximator)
