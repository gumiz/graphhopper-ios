//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/weighting/AvoidEdgesWeighting.java
//

#ifndef _ComGraphhopperRoutingWeightingAvoidEdgesWeighting_H_
#define _ComGraphhopperRoutingWeightingAvoidEdgesWeighting_H_

@protocol ComGraphhopperRoutingWeightingWeighting;
@protocol EdgeIteratorState;
@protocol GnuTroveSetTIntSet;
@protocol JavaUtilCollection;

#include "J2ObjC_header.h"
#include "com/graphhopper/routing/weighting/AbstractAdjustedWeighting.h"

/**
 @brief Rates already used Paths worse.
 @author RobinBoldt
 */
@interface ComGraphhopperRoutingWeightingAvoidEdgesWeighting : ComGraphhopperRoutingWeightingAbstractAdjustedWeighting {
 @public
  id<GnuTroveSetTIntSet> visitedEdges_;
}

- (instancetype)initWithComGraphhopperRoutingWeightingWeighting:(id<ComGraphhopperRoutingWeightingWeighting>)superWeighting;

- (ComGraphhopperRoutingWeightingAvoidEdgesWeighting *)setEdgePenaltyFactorWithDouble:(jdouble)edgePenaltyFactor;

/**
 @brief This method adds the specified path to this weighting which should be penalized in the calcWeight method.
 */
- (void)addEdgesWithJavaUtilCollection:(id<JavaUtilCollection>)edges;

- (jdouble)getMinWeightWithDouble:(jdouble)distance;

- (jdouble)calcWeightWithEdgeIteratorState:(id<EdgeIteratorState>)edgeState
                               withBoolean:(jboolean)reverse
                                   withInt:(jint)prevOrNextEdgeId;

- (NSString *)getName;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGraphhopperRoutingWeightingAvoidEdgesWeighting)

J2OBJC_FIELD_SETTER(ComGraphhopperRoutingWeightingAvoidEdgesWeighting, visitedEdges_, id<GnuTroveSetTIntSet>)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(ComGraphhopperRoutingWeightingAvoidEdgesWeighting)

#endif // _ComGraphhopperRoutingWeightingAvoidEdgesWeighting_H_
