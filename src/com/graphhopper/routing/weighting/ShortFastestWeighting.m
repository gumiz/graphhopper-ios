//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/weighting/ShortFastestWeighting.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/routing/util/FlagEncoder.h"
#include "com/graphhopper/routing/weighting/ShortFastestWeighting.h"
#include "com/graphhopper/util/EdgeIteratorState.h"
#include "com/graphhopper/util/PMap.h"
#include "java/lang/IllegalArgumentException.h"

__attribute__((unused)) static jdouble ComGraphhopperRoutingWeightingShortFastestWeighting_checkBoundsWithNSString_withDouble_(ComGraphhopperRoutingWeightingShortFastestWeighting *self, NSString *key, jdouble val);

@interface ComGraphhopperRoutingWeightingShortFastestWeighting () {
 @public
  jdouble distanceFactor_;
  jdouble timeFactor_;
}

- (jdouble)checkBoundsWithNSString:(NSString *)key
                        withDouble:(jdouble)val;
@end

@implementation ComGraphhopperRoutingWeightingShortFastestWeighting

NSString * ComGraphhopperRoutingWeightingShortFastestWeighting_NAME_ = @"short_fastest";
NSString * ComGraphhopperRoutingWeightingShortFastestWeighting_TIME_FACTOR_ = @"short_fastest.time_factor";
NSString * ComGraphhopperRoutingWeightingShortFastestWeighting_DISTANCE_FACTOR_ = @"short_fastest.distance_factor";

- (instancetype)initWithFlagEncoder:(id<FlagEncoder>)encoder
                           withPMap:(PMap *)pMap {
  if (self = [super initWithFlagEncoder:encoder]) {
    timeFactor_ = ComGraphhopperRoutingWeightingShortFastestWeighting_checkBoundsWithNSString_withDouble_(self, ComGraphhopperRoutingWeightingShortFastestWeighting_TIME_FACTOR_, [((PMap *) nil_chk(pMap)) getDoubleWithNSString:ComGraphhopperRoutingWeightingShortFastestWeighting_TIME_FACTOR_ withDouble:1]);
    distanceFactor_ = ComGraphhopperRoutingWeightingShortFastestWeighting_checkBoundsWithNSString_withDouble_(self, ComGraphhopperRoutingWeightingShortFastestWeighting_DISTANCE_FACTOR_, [pMap getDoubleWithNSString:ComGraphhopperRoutingWeightingShortFastestWeighting_DISTANCE_FACTOR_ withDouble:0.07]);
    if (timeFactor_ < 1e-5 && distanceFactor_ < 1e-5) @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("C$$", '[', ComGraphhopperRoutingWeightingShortFastestWeighting_NAME_, @"] one of distance_factor or time_factor has to be non-zero")] autorelease];
  }
  return self;
}

- (instancetype)initWithFlagEncoder:(id<FlagEncoder>)encoder
                         withDouble:(jdouble)distanceFactor {
  if (self = [super initWithFlagEncoder:encoder]) {
    self->distanceFactor_ = ComGraphhopperRoutingWeightingShortFastestWeighting_checkBoundsWithNSString_withDouble_(self, ComGraphhopperRoutingWeightingShortFastestWeighting_DISTANCE_FACTOR_, distanceFactor);
    self->timeFactor_ = 1;
  }
  return self;
}

- (jdouble)getMinWeightWithDouble:(jdouble)distance {
  return [super getMinWeightWithDouble:distance * distanceFactor_];
}

- (jdouble)calcWeightWithEdgeIteratorState:(id<EdgeIteratorState>)edge
                               withBoolean:(jboolean)reverse
                                   withInt:(jint)prevOrNextEdgeId {
  jdouble time = [super calcWeightWithEdgeIteratorState:edge withBoolean:reverse withInt:prevOrNextEdgeId];
  return time * timeFactor_ + [((id<EdgeIteratorState>) nil_chk(edge)) getDistance] * distanceFactor_;
}

- (NSString *)getName {
  return ComGraphhopperRoutingWeightingShortFastestWeighting_NAME_;
}

- (jdouble)checkBoundsWithNSString:(NSString *)key
                        withDouble:(jdouble)val {
  return ComGraphhopperRoutingWeightingShortFastestWeighting_checkBoundsWithNSString_withDouble_(self, key, val);
}

- (void)copyAllFieldsTo:(ComGraphhopperRoutingWeightingShortFastestWeighting *)other {
  [super copyAllFieldsTo:other];
  other->distanceFactor_ = distanceFactor_;
  other->timeFactor_ = timeFactor_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFlagEncoder:withPMap:", "ShortFastestWeighting", NULL, 0x1, NULL },
    { "initWithFlagEncoder:withDouble:", "ShortFastestWeighting", NULL, 0x1, NULL },
    { "getMinWeightWithDouble:", "getMinWeight", "D", 0x1, NULL },
    { "calcWeightWithEdgeIteratorState:withBoolean:withInt:", "calcWeight", "D", 0x1, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "checkBoundsWithNSString:withDouble:", "checkBounds", "D", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NAME_", NULL, 0x1a, "Ljava.lang.String;", &ComGraphhopperRoutingWeightingShortFastestWeighting_NAME_,  },
    { "TIME_FACTOR_", NULL, 0x1a, "Ljava.lang.String;", &ComGraphhopperRoutingWeightingShortFastestWeighting_TIME_FACTOR_,  },
    { "DISTANCE_FACTOR_", NULL, 0x1a, "Ljava.lang.String;", &ComGraphhopperRoutingWeightingShortFastestWeighting_DISTANCE_FACTOR_,  },
    { "distanceFactor_", NULL, 0x12, "D", NULL,  },
    { "timeFactor_", NULL, 0x12, "D", NULL,  },
  };
  static const J2ObjcClassInfo _ComGraphhopperRoutingWeightingShortFastestWeighting = { 1, "ShortFastestWeighting", "com.graphhopper.routing.weighting", NULL, 0x1, 6, methods, 5, fields, 0, NULL};
  return &_ComGraphhopperRoutingWeightingShortFastestWeighting;
}

@end

jdouble ComGraphhopperRoutingWeightingShortFastestWeighting_checkBoundsWithNSString_withDouble_(ComGraphhopperRoutingWeightingShortFastestWeighting *self, NSString *key, jdouble val) {
  if (val < 0 || val > 10) @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$$", key, @" has invalid range should be within [0, 10]")] autorelease];
  return val;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGraphhopperRoutingWeightingShortFastestWeighting)
