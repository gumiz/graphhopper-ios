//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/weighting/FastestWeighting.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/routing/util/FlagEncoder.h"
#include "com/graphhopper/routing/weighting/FastestWeighting.h"
#include "com/graphhopper/util/EdgeIteratorState.h"
#include "com/graphhopper/util/PMap.h"
#include "com/graphhopper/util/Parameters.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"

@interface ComGraphhopperRoutingWeightingFastestWeighting () {
 @public
  jdouble headingPenalty_;
  jlong headingPenaltyMillis_;
  jdouble maxSpeed_;
}
@end

@implementation ComGraphhopperRoutingWeightingFastestWeighting

- (instancetype)initComGraphhopperRoutingWeightingFastestWeightingWithFlagEncoder:(id<FlagEncoder>)encoder
                                                                         withPMap:(PMap *)pMap {
  if (self = [super initWithFlagEncoder:encoder]) {
    headingPenalty_ = [((PMap *) nil_chk(pMap)) getDoubleWithNSString:Parameters_Routing_get_HEADING_PENALTY_() withDouble:Parameters_Routing_DEFAULT_HEADING_PENALTY];
    headingPenaltyMillis_ = JavaLangMath_roundWithDouble_(headingPenalty_ * 1000);
    maxSpeed_ = [((id<FlagEncoder>) nil_chk(encoder)) getMaxSpeed] / ComGraphhopperRoutingWeightingFastestWeighting_SPEED_CONV;
  }
  return self;
}

- (instancetype)initWithFlagEncoder:(id<FlagEncoder>)encoder
                           withPMap:(PMap *)pMap {
  return [self initComGraphhopperRoutingWeightingFastestWeightingWithFlagEncoder:encoder withPMap:pMap];
}

- (instancetype)initWithFlagEncoder:(id<FlagEncoder>)encoder {
  return [self initComGraphhopperRoutingWeightingFastestWeightingWithFlagEncoder:encoder withPMap:[[[PMap alloc] initWithInt:0] autorelease]];
}

- (jdouble)getMinWeightWithDouble:(jdouble)distance {
  return distance / maxSpeed_;
}

- (jdouble)calcWeightWithEdgeIteratorState:(id<EdgeIteratorState>)edge
                               withBoolean:(jboolean)reverse
                                   withInt:(jint)prevOrNextEdgeId {
  jdouble speed = reverse ? [((id<FlagEncoder>) nil_chk(flagEncoder_)) getReverseSpeedWithLong:[((id<EdgeIteratorState>) nil_chk(edge)) getFlags]] : [((id<FlagEncoder>) nil_chk(flagEncoder_)) getSpeedWithLong:[((id<EdgeIteratorState>) nil_chk(edge)) getFlags]];
  if (speed == 0) return JavaLangDouble_POSITIVE_INFINITY;
  jdouble time = [((id<EdgeIteratorState>) nil_chk(edge)) getDistance] / speed * ComGraphhopperRoutingWeightingFastestWeighting_SPEED_CONV;
  jboolean unfavoredEdge = [edge getBoolWithInt:EdgeIteratorState_K_UNFAVORED_EDGE withBoolean:NO];
  if (unfavoredEdge) time += headingPenalty_;
  return time;
}

- (jlong)calcMillisWithEdgeIteratorState:(id<EdgeIteratorState>)edgeState
                             withBoolean:(jboolean)reverse
                                 withInt:(jint)prevOrNextEdgeId {
  jlong time = 0;
  jboolean unfavoredEdge = [((id<EdgeIteratorState>) nil_chk(edgeState)) getBoolWithInt:EdgeIteratorState_K_UNFAVORED_EDGE withBoolean:NO];
  if (unfavoredEdge) time += headingPenaltyMillis_;
  return time + [super calcMillisWithEdgeIteratorState:edgeState withBoolean:reverse withInt:prevOrNextEdgeId];
}

- (NSString *)getName {
  return @"fastest";
}

- (void)copyAllFieldsTo:(ComGraphhopperRoutingWeightingFastestWeighting *)other {
  [super copyAllFieldsTo:other];
  other->headingPenalty_ = headingPenalty_;
  other->headingPenaltyMillis_ = headingPenaltyMillis_;
  other->maxSpeed_ = maxSpeed_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFlagEncoder:withPMap:", "FastestWeighting", NULL, 0x1, NULL },
    { "initWithFlagEncoder:", "FastestWeighting", NULL, 0x1, NULL },
    { "getMinWeightWithDouble:", "getMinWeight", "D", 0x1, NULL },
    { "calcWeightWithEdgeIteratorState:withBoolean:withInt:", "calcWeight", "D", 0x1, NULL },
    { "calcMillisWithEdgeIteratorState:withBoolean:withInt:", "calcMillis", "J", 0x1, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "SPEED_CONV_", NULL, 0x1c, "D", NULL, .constantValue.asDouble = ComGraphhopperRoutingWeightingFastestWeighting_SPEED_CONV },
    { "headingPenalty_", NULL, 0x12, "D", NULL,  },
    { "headingPenaltyMillis_", NULL, 0x12, "J", NULL,  },
    { "maxSpeed_", NULL, 0x12, "D", NULL,  },
  };
  static const J2ObjcClassInfo _ComGraphhopperRoutingWeightingFastestWeighting = { 1, "FastestWeighting", "com.graphhopper.routing.weighting", NULL, 0x1, 6, methods, 4, fields, 0, NULL};
  return &_ComGraphhopperRoutingWeightingFastestWeighting;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGraphhopperRoutingWeightingFastestWeighting)
