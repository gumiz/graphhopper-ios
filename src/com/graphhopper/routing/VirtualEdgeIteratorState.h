//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/VirtualEdgeIteratorState.java
//

#ifndef _VirtualEdgeIteratorState_H_
#define _VirtualEdgeIteratorState_H_

@class PointList;
@protocol FlagEncoder;

#include "J2ObjC_header.h"
#include "com/graphhopper/util/CHEdgeIteratorState.h"
#include "com/graphhopper/util/EdgeIteratorState.h"

/**
 @brief Creates an edge state decoupled from a graph where nodes, pointList, etc are kept in memory.
 <p> Note, this class is not suited for public use and can change with minor releases unexpectedly or even gets removed.
 */
@interface VirtualEdgeIteratorState : NSObject < EdgeIteratorState, CHEdgeIteratorState > {
}

- (instancetype)initWithInt:(jint)originalTraversalKey
                    withInt:(jint)edgeId
                    withInt:(jint)baseNode
                    withInt:(jint)adjNode
                 withDouble:(jdouble)distance
                   withLong:(jlong)flags
               withNSString:(NSString *)name
              withPointList:(PointList *)pointList;

/**
 @brief This method returns the original edge via its traversal key.
 I.e. also the direction is already correctly encoded. <p>
 */
- (jint)getOriginalTraversalKey;

- (jint)getEdge;

- (jint)getBaseNode;

- (jint)getAdjNode;

- (PointList *)fetchWayGeometryWithInt:(jint)mode;

- (id<EdgeIteratorState>)setWayGeometryWithPointList:(PointList *)list;

- (jdouble)getDistance;

- (id<EdgeIteratorState>)setDistanceWithDouble:(jdouble)dist;

- (jlong)getFlags;

- (id<EdgeIteratorState>)setFlagsWithLong:(jlong)flags;

- (NSString *)getName;

- (id<EdgeIteratorState>)setNameWithNSString:(NSString *)name;

- (jboolean)getBoolWithInt:(jint)key
               withBoolean:(jboolean)_default;

/**
 @brief This method sets edge to unfavored status for routing from or to the start/stop points.
 */
- (void)setUnfavoredWithBoolean:(jboolean)unfavored;

- (NSString *)description;

- (jboolean)isShortcut;

- (jboolean)isForwardWithFlagEncoder:(id<FlagEncoder>)encoder;

- (jboolean)isBackwardWithFlagEncoder:(id<FlagEncoder>)encoder;

- (jint)getAdditionalField;

- (jboolean)canBeOverwrittenWithLong:(jlong)flags;

- (jint)getSkippedEdge1;

- (jint)getSkippedEdge2;

- (void)setSkippedEdgesWithInt:(jint)edge1
                       withInt:(jint)edge2;

- (id<EdgeIteratorState>)detachWithBoolean:(jboolean)reverse;

- (id<EdgeIteratorState>)setAdditionalFieldWithInt:(jint)value;

- (id<EdgeIteratorState>)copyPropertiesToWithEdgeIteratorState:(id<EdgeIteratorState>)edge OBJC_METHOD_FAMILY_NONE;

- (id<CHEdgeIteratorState>)setWeightWithDouble:(jdouble)weight;

- (jdouble)getWeight;

@end

J2OBJC_EMPTY_STATIC_INIT(VirtualEdgeIteratorState)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef VirtualEdgeIteratorState ComGraphhopperRoutingVirtualEdgeIteratorState;

J2OBJC_TYPE_LITERAL_HEADER(VirtualEdgeIteratorState)

#endif // _VirtualEdgeIteratorState_H_
