//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/RoutingAlgorithm.java
//

#ifndef _RoutingAlgorithm_H_
#define _RoutingAlgorithm_H_

@class Path;
@protocol JavaUtilList;

#include "J2ObjC_header.h"

/**
 @brief Calculates the shortest path from the specified node ids.
 Can be used only once. <p>
 @author Peter Karich
 */
@protocol RoutingAlgorithm < NSObject, JavaObject >

/**
 @brief Calculates the best path between the specified nodes.
 @return the path. Call the method found() to make sure that the path is valid.
 */
- (Path *)calcPathWithInt:(jint)from
                  withInt:(jint)to;

/**
 @brief Calculates multiple possibilities for a path.
 */
- (id<JavaUtilList>)calcPathsWithInt:(jint)from
                             withInt:(jint)to;

/**
 @brief Limit the search to numberOfNodes.
 See #681
 */
- (void)setMaxVisitedNodesWithInt:(jint)numberOfNodes;

/**
 @return name of this algorithm
 */
- (NSString *)getName;

/**
 @brief Returns the visited nodes after searching.
 Useful for debugging.
 */
- (jint)getVisitedNodes;

@end

J2OBJC_EMPTY_STATIC_INIT(RoutingAlgorithm)

#define ComGraphhopperRoutingRoutingAlgorithm RoutingAlgorithm

J2OBJC_TYPE_LITERAL_HEADER(RoutingAlgorithm)

#endif // _RoutingAlgorithm_H_
