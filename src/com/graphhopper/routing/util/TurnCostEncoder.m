//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/util/TurnCostEncoder.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/routing/util/TurnCostEncoder.h"

@interface TurnCostEncoder : NSObject
@end

@implementation TurnCostEncoder

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isTurnRestrictedWithLong:", "isTurnRestricted", "Z", 0x401, NULL },
    { "getTurnCostWithLong:", "getTurnCost", "D", 0x401, NULL },
    { "getTurnFlagsWithBoolean:withDouble:", "getTurnFlags", "J", 0x401, NULL },
  };
  static const J2ObjcClassInfo _TurnCostEncoder = { 1, "TurnCostEncoder", "com.graphhopper.routing.util", NULL, 0x201, 3, methods, 0, NULL, 0, NULL};
  return &_TurnCostEncoder;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(TurnCostEncoder)

@implementation TurnCostEncoder_NoTurnCostsEncoder

- (jboolean)isTurnRestrictedWithLong:(jlong)flags {
  return NO;
}

- (jdouble)getTurnCostWithLong:(jlong)flags {
  return 0;
}

- (jlong)getTurnFlagsWithBoolean:(jboolean)restriction
                      withDouble:(jdouble)costs {
  return 0;
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isTurnRestrictedWithLong:", "isTurnRestricted", "Z", 0x1, NULL },
    { "getTurnCostWithLong:", "getTurnCost", "D", 0x1, NULL },
    { "getTurnFlagsWithBoolean:withDouble:", "getTurnFlags", "J", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _TurnCostEncoder_NoTurnCostsEncoder = { 1, "NoTurnCostsEncoder", "com.graphhopper.routing.util", "TurnCostEncoder", 0x9, 4, methods, 0, NULL, 0, NULL};
  return &_TurnCostEncoder_NoTurnCostsEncoder;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(TurnCostEncoder_NoTurnCostsEncoder)
