//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/util/Bike2WeightFlagEncoder.java
//

#ifndef _Bike2WeightFlagEncoder_H_
#define _Bike2WeightFlagEncoder_H_

@class EncodedDoubleValue;
@class PMap;
@class ReaderWay;
@protocol EdgeIteratorState;

#include "J2ObjC_header.h"
#include "com/graphhopper/routing/util/BikeFlagEncoder.h"

/**
 @brief Stores two speed values into an edge to support avoiding too much incline <p>
 @author Peter Karich
 */
@interface Bike2WeightFlagEncoder : BikeFlagEncoder {
}

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)propertiesStr;

- (instancetype)initWithPMap:(PMap *)properties;

- (instancetype)initWithInt:(jint)speedBits
                 withDouble:(jdouble)speedFactor
                    withInt:(jint)maxTurnCosts;

- (jint)getVersion;

- (jint)defineWayBitsWithInt:(jint)index
                     withInt:(jint)shift;

- (jdouble)getReverseSpeedWithLong:(jlong)flags;

- (jlong)setReverseSpeedWithLong:(jlong)flags
                      withDouble:(jdouble)speed;

- (jlong)handleSpeedWithReaderWay:(ReaderWay *)way
                       withDouble:(jdouble)speed
                         withLong:(jlong)flags;

- (jlong)setLowSpeedWithLong:(jlong)flags
                  withDouble:(jdouble)speed
                 withBoolean:(jboolean)reverse;

- (jlong)flagsDefaultWithBoolean:(jboolean)forward
                     withBoolean:(jboolean)backward;

- (jlong)setPropertiesWithDouble:(jdouble)speed
                     withBoolean:(jboolean)forward
                     withBoolean:(jboolean)backward;

- (jlong)reverseFlagsWithLong:(jlong)flags;

- (void)applyWayTagsWithReaderWay:(ReaderWay *)way
            withEdgeIteratorState:(id<EdgeIteratorState>)edge;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(Bike2WeightFlagEncoder)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef Bike2WeightFlagEncoder ComGraphhopperRoutingUtilBike2WeightFlagEncoder;

J2OBJC_TYPE_LITERAL_HEADER(Bike2WeightFlagEncoder)

#endif // _Bike2WeightFlagEncoder_H_
