//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/util/MountainBikeFlagEncoder.java
//

#ifndef _MountainBikeFlagEncoder_H_
#define _MountainBikeFlagEncoder_H_

@class JavaUtilTreeMap;
@class PMap;
@class ReaderRelation;
@class ReaderWay;

#include "J2ObjC_header.h"
#include "com/graphhopper/routing/util/BikeCommonFlagEncoder.h"

/**
 @brief Specifies the settings for mountain biking <p>
 @author ratrun
 @author Peter Karich
 */
@interface MountainBikeFlagEncoder : BikeCommonFlagEncoder {
}

- (instancetype)init;

- (instancetype)initWithPMap:(PMap *)properties;

- (instancetype)initWithNSString:(NSString *)propertiesStr;

- (instancetype)initWithInt:(jint)speedBits
                 withDouble:(jdouble)speedFactor
                    withInt:(jint)maxTurnCosts;

- (jint)getVersion;

- (void)collectWithReaderWay:(ReaderWay *)way
                  withDouble:(jdouble)wayTypeSpeed
         withJavaUtilTreeMap:(JavaUtilTreeMap *)weightToPrioMap;

- (jlong)handleRelationTagsWithReaderRelation:(ReaderRelation *)relation
                                     withLong:(jlong)oldRelationFlags;

- (jboolean)isSacScaleAllowedWithNSString:(NSString *)sacScale;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(MountainBikeFlagEncoder)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef MountainBikeFlagEncoder ComGraphhopperRoutingUtilMountainBikeFlagEncoder;

J2OBJC_TYPE_LITERAL_HEADER(MountainBikeFlagEncoder)

#endif // _MountainBikeFlagEncoder_H_
