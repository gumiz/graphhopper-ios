//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/util/TestAlgoCollector.java
//

#ifndef _TestAlgoCollector_H_
#define _TestAlgoCollector_H_

@class AlgorithmOptions;
@class TestAlgoCollector_AlgoHelperEntry;
@class TestAlgoCollector_OneRun;
@class TranslationMap;
@protocol DistanceCalc;
@protocol EdgeFilter;
@protocol Graph;
@protocol JavaUtilList;
@protocol LocationIndex;
@protocol RoutingAlgorithm;

#include "J2ObjC_header.h"

/**
 @author Peter Karich
 */
@interface TestAlgoCollector : NSObject {
 @public
  id<JavaUtilList> errors_;
}

- (instancetype)initWithNSString:(NSString *)name;

- (TestAlgoCollector *)assertDistanceWithTestAlgoCollector_AlgoHelperEntry:(TestAlgoCollector_AlgoHelperEntry *)algoEntry
                                                          withJavaUtilList:(id<JavaUtilList>)queryList
                                              withTestAlgoCollector_OneRun:(TestAlgoCollector_OneRun *)oneRun;

- (void)queryIndexWithGraph:(id<Graph>)g
          withLocationIndex:(id<LocationIndex>)idx
                 withDouble:(jdouble)lat
                 withDouble:(jdouble)lon
                 withDouble:(jdouble)expectedDist;

- (NSString *)description;

- (void)printSummary;

@end

J2OBJC_EMPTY_STATIC_INIT(TestAlgoCollector)

J2OBJC_FIELD_SETTER(TestAlgoCollector, errors_, id<JavaUtilList>)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef TestAlgoCollector ComGraphhopperRoutingUtilTestAlgoCollector;

J2OBJC_TYPE_LITERAL_HEADER(TestAlgoCollector)

@interface TestAlgoCollector_AlgoHelperEntry : NSObject {
}

- (instancetype)initWithGraph:(id<Graph>)g
                    withGraph:(id<Graph>)baseGraph
         withAlgorithmOptions:(AlgorithmOptions *)opts
            withLocationIndex:(id<LocationIndex>)idx;

- (id<Graph>)getQueryGraph;

- (void)setQueryGraphWithGraph:(id<Graph>)queryGraph;

- (id<Graph>)getBaseGraph;

- (void)setAlgorithmOptionsWithAlgorithmOptions:(AlgorithmOptions *)opts;

- (id<LocationIndex>)getIdx;

- (id<RoutingAlgorithm>)createAlgoWithGraph:(id<Graph>)qGraph;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(TestAlgoCollector_AlgoHelperEntry)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(TestAlgoCollector_AlgoHelperEntry)

@interface TestAlgoCollector_OneRun : NSObject {
}

- (instancetype)init;

- (instancetype)initWithDouble:(jdouble)fromLat
                    withDouble:(jdouble)fromLon
                    withDouble:(jdouble)toLat
                    withDouble:(jdouble)toLon
                    withDouble:(jdouble)dist
                       withInt:(jint)locs;

- (TestAlgoCollector_OneRun *)addWithDouble:(jdouble)lat
                                 withDouble:(jdouble)lon
                                 withDouble:(jdouble)dist
                                    withInt:(jint)locs;

- (jint)getLocs;

- (void)setLocsWithInt:(jint)index
               withInt:(jint)locs;

- (jdouble)getDistance;

- (void)setDistanceWithInt:(jint)index
                withDouble:(jdouble)dist;

- (id<JavaUtilList>)getListWithLocationIndex:(id<LocationIndex>)idx
                              withEdgeFilter:(id<EdgeFilter>)edgeFilter;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(TestAlgoCollector_OneRun)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(TestAlgoCollector_OneRun)

@interface TestAlgoCollector_AssumptionPerPath : NSObject {
 @public
  jdouble lat_, lon_;
  jint locs_;
  jdouble distance_;
}

- (instancetype)initWithDouble:(jdouble)lat
                    withDouble:(jdouble)lon
                    withDouble:(jdouble)distance
                       withInt:(jint)locs;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(TestAlgoCollector_AssumptionPerPath)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(TestAlgoCollector_AssumptionPerPath)

#endif // _TestAlgoCollector_H_
