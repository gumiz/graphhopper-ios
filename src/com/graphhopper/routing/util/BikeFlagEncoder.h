//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/util/BikeFlagEncoder.java
//

#ifndef _BikeFlagEncoder_H_
#define _BikeFlagEncoder_H_

@class PMap;
@class ReaderWay;

#include "J2ObjC_header.h"
#include "com/graphhopper/routing/util/BikeCommonFlagEncoder.h"

/**
 @brief Specifies the settings for cycletouring/trekking <p>
 @author ratrun
 @author Peter Karich
 */
@interface BikeFlagEncoder : BikeCommonFlagEncoder {
}

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)propertiesString;

- (instancetype)initWithPMap:(PMap *)properties;

- (instancetype)initWithInt:(jint)speedBits
                 withDouble:(jdouble)speedFactor
                    withInt:(jint)maxTurnCosts;

- (jint)getVersion;

- (jboolean)isPushingSectionWithReaderWay:(ReaderWay *)way;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(BikeFlagEncoder)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef BikeFlagEncoder ComGraphhopperRoutingUtilBikeFlagEncoder;

J2OBJC_TYPE_LITERAL_HEADER(BikeFlagEncoder)

#endif // _BikeFlagEncoder_H_
