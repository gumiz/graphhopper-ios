//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/util/LevelEdgeFilter.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/routing/util/LevelEdgeFilter.h"
#include "com/graphhopper/storage/CHGraph.h"
#include "com/graphhopper/util/CHEdgeIteratorState.h"
#include "com/graphhopper/util/EdgeIteratorState.h"

@interface LevelEdgeFilter () {
 @public
  id<CHGraph> graph_;
  jint maxNodes_;
}
@end

J2OBJC_FIELD_SETTER(LevelEdgeFilter, graph_, id<CHGraph>)

@implementation LevelEdgeFilter

- (instancetype)initWithCHGraph:(id<CHGraph>)g {
  if (self = [super init]) {
    LevelEdgeFilter_set_graph_(self, g);
    maxNodes_ = [((id<CHGraph>) nil_chk(g)) getNodes];
  }
  return self;
}

- (jboolean)acceptWithEdgeIteratorState:(id<EdgeIteratorState>)edgeIterState {
  jint base = [((id<EdgeIteratorState>) nil_chk(edgeIterState)) getBaseNode];
  jint adj = [edgeIterState getAdjNode];
  if (base >= maxNodes_ || adj >= maxNodes_) return YES;
  if ([((id<CHEdgeIteratorState>) check_protocol_cast(edgeIterState, @protocol(CHEdgeIteratorState))) isShortcut]) return YES;
  return [((id<CHGraph>) nil_chk(graph_)) getLevelWithInt:base] <= [graph_ getLevelWithInt:adj];
}

- (void)dealloc {
  RELEASE_(graph_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(LevelEdgeFilter *)other {
  [super copyAllFieldsTo:other];
  LevelEdgeFilter_set_graph_(other, graph_);
  other->maxNodes_ = maxNodes_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCHGraph:", "LevelEdgeFilter", NULL, 0x1, NULL },
    { "acceptWithEdgeIteratorState:", "accept", "Z", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "graph_", NULL, 0x12, "Lcom.graphhopper.storage.CHGraph;", NULL,  },
    { "maxNodes_", NULL, 0x12, "I", NULL,  },
  };
  static const J2ObjcClassInfo _LevelEdgeFilter = { 1, "LevelEdgeFilter", "com.graphhopper.routing.util", NULL, 0x1, 2, methods, 2, fields, 0, NULL};
  return &_LevelEdgeFilter;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(LevelEdgeFilter)
