//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/util/EdgeFilter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/graphhopper/routing/util/EdgeFilter.h"
#include "com/graphhopper/util/EdgeIteratorState.h"

BOOL EdgeFilter_initialized = NO;

id<EdgeFilter> EdgeFilter_ALL_EDGES_;

@implementation EdgeFilter

+ (void)initialize {
  if (self == [EdgeFilter class]) {
    JreStrongAssignAndConsume(&EdgeFilter_ALL_EDGES_, nil, [[EdgeFilter_$1 alloc] init]);
    J2OBJC_SET_INITIALIZED(EdgeFilter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "acceptWithEdgeIteratorState:", "accept", "Z", 0x401, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ALL_EDGES_", NULL, 0x19, "Lcom.graphhopper.routing.util.EdgeFilter;", &EdgeFilter_ALL_EDGES_,  },
  };
  static const J2ObjcClassInfo _EdgeFilter = { 1, "EdgeFilter", "com.graphhopper.routing.util", NULL, 0x201, 1, methods, 1, fields, 0, NULL};
  return &_EdgeFilter;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EdgeFilter)

@implementation EdgeFilter_$1

- (jboolean)acceptWithEdgeIteratorState:(id<EdgeIteratorState>)edgeState {
  return YES;
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "acceptWithEdgeIteratorState:", "accept", "Z", 0x11, NULL },
    { "init", NULL, NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _EdgeFilter_$1 = { 1, "$1", "com.graphhopper.routing.util", "EdgeFilter", 0x8000, 2, methods, 0, NULL, 0, NULL};
  return &_EdgeFilter_$1;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EdgeFilter_$1)
