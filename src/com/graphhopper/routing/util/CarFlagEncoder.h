//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java
//

#ifndef _CarFlagEncoder_H_
#define _CarFlagEncoder_H_

@class PMap;
@class ReaderRelation;
@class ReaderWay;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

#include "J2ObjC_header.h"
#include "com/graphhopper/routing/util/AbstractFlagEncoder.h"

/**
 @brief Defines bit layout for cars.
 (speed, access, ferries, ...) <p>
 @author Peter Karich
 @author Nop
 */
@interface CarFlagEncoder : AbstractFlagEncoder {
 @public
  id<JavaUtilMap> trackTypeSpeedMap_;
  id<JavaUtilSet> badSurfaceSpeedMap_;
  jint badSurfaceSpeed_;
  /**
   @brief A map which associates string to speed.
   Get some impression: http://www.itoworld.com/map/124#fullscreen http://wiki.openstreetmap.org/wiki/OSM_tags_for_routing/Maxspeed
   */
  id<JavaUtilMap> defaultSpeedMap_;
}

- (instancetype)init;

- (instancetype)initWithPMap:(PMap *)properties;

- (instancetype)initWithNSString:(NSString *)propertiesStr;

- (instancetype)initWithInt:(jint)speedBits
                 withDouble:(jdouble)speedFactor
                    withInt:(jint)maxTurnCosts;

- (jint)getVersion;

/**
 @brief Define the place of the speedBits in the edge flags for car.
 */
- (jint)defineWayBitsWithInt:(jint)index
                     withInt:(jint)shift;

- (jdouble)getSpeedWithReaderWay:(ReaderWay *)way;

- (jlong)acceptWayWithReaderWay:(ReaderWay *)way;

- (jlong)handleRelationTagsWithReaderRelation:(ReaderRelation *)relation
                                     withLong:(jlong)oldRelationFlags;

- (jlong)handleWayTagsWithReaderWay:(ReaderWay *)way
                           withLong:(jlong)allowed
                           withLong:(jlong)relationFlags;

/**
 @brief make sure that isOneway is called before
 */
- (jboolean)isBackwardOnewayWithReaderWay:(ReaderWay *)way;

/**
 @brief make sure that isOneway is called before
 */
- (jboolean)isForwardOnewayWithReaderWay:(ReaderWay *)way;

- (jboolean)isOnewayWithReaderWay:(ReaderWay *)way;

- (NSString *)getWayInfoWithReaderWay:(ReaderWay *)way;

/**
 @param way:   needed to retrieve tags
 @param speed: speed guessed e.g. from the road type or other tags
 @return The assumed speed
 */
- (jdouble)applyBadSurfaceSpeedWithReaderWay:(ReaderWay *)way
                                  withDouble:(jdouble)speed;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(CarFlagEncoder)

J2OBJC_FIELD_SETTER(CarFlagEncoder, trackTypeSpeedMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(CarFlagEncoder, badSurfaceSpeedMap_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(CarFlagEncoder, defaultSpeedMap_, id<JavaUtilMap>)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef CarFlagEncoder ComGraphhopperRoutingUtilCarFlagEncoder;

J2OBJC_TYPE_LITERAL_HEADER(CarFlagEncoder)

#endif // _CarFlagEncoder_H_
