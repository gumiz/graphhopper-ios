//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/routing/DijkstraOneToMany.java
//

#ifndef _DijkstraOneToMany_H_
#define _DijkstraOneToMany_H_

@class DijkstraOneToMany_TIntArrayListWithCap;
@class IOSDoubleArray;
@class IOSIntArray;
@class IntDoubleBinHeap;
@class Path;
@class TraversalModeEnum;
@protocol ComGraphhopperRoutingWeightingWeighting;
@protocol Graph;

#include "J2ObjC_header.h"
#include "com/graphhopper/routing/AbstractRoutingAlgorithm.h"
#include "gnu/trove/list/array/TIntArrayList.h"

#define DijkstraOneToMany_EMPTY_PARENT -1
#define DijkstraOneToMany_NOT_FOUND -1

/**
 @brief A simple dijkstra tuned to perform one to many queries more efficient than Dijkstra.
 Old data structures are cached between requests and potentially reused. Useful for CH preparation. <p>
 @author Peter Karich
 */
@interface DijkstraOneToMany : AbstractRoutingAlgorithm {
 @public
  IOSDoubleArray *weights_;
}

- (instancetype)initWithGraph:(id<Graph>)graph
withComGraphhopperRoutingWeightingWeighting:(id<ComGraphhopperRoutingWeightingWeighting>)weighting
        withTraversalModeEnum:(TraversalModeEnum *)tMode;

- (Path *)calcPathWithInt:(jint)from
                  withInt:(jint)to;

- (Path *)extractPath;

/**
 @brief Call clear if you have a different start node and need to clear the cache.
 */
- (DijkstraOneToMany *)clear;

- (jdouble)getWeightWithInt:(jint)endNode;

- (jint)findEndNodeWithInt:(jint)from
                   withInt:(jint)to;

- (jboolean)finished;

- (void)setWeightLimitWithDouble:(jdouble)weightLimit;

- (jboolean)isWeightLimitExceeded;

- (void)close;

- (jint)getVisitedNodes;

- (NSString *)getName;

/**
 @brief List currently used memory in MB (approximately)
 */
- (NSString *)getMemoryUsageAsString;

@end

J2OBJC_EMPTY_STATIC_INIT(DijkstraOneToMany)

J2OBJC_FIELD_SETTER(DijkstraOneToMany, weights_, IOSDoubleArray *)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(DijkstraOneToMany, EMPTY_PARENT, jint)

J2OBJC_STATIC_FIELD_GETTER(DijkstraOneToMany, NOT_FOUND, jint)
CF_EXTERN_C_END

typedef DijkstraOneToMany ComGraphhopperRoutingDijkstraOneToMany;

J2OBJC_TYPE_LITERAL_HEADER(DijkstraOneToMany)

@interface DijkstraOneToMany_TIntArrayListWithCap : GnuTroveListArrayTIntArrayList {
}

- (instancetype)init;

- (jint)getCapacity;

@end

J2OBJC_EMPTY_STATIC_INIT(DijkstraOneToMany_TIntArrayListWithCap)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(DijkstraOneToMany_TIntArrayListWithCap)

#endif // _DijkstraOneToMany_H_
