//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/reader/osm/conditional/DateRangeParser.java
//

#ifndef _ComGraphhopperReaderOsmConditionalDateRangeParser_H_
#define _ComGraphhopperReaderOsmConditionalDateRangeParser_H_

@class ComGraphhopperReaderOsmConditionalDateRange;
@class ComGraphhopperReaderOsmConditionalParsedCalendar;
@class JavaTextDateFormat;
@class JavaUtilCalendar;
@protocol JavaUtilList;

#include "J2ObjC_header.h"

/**
 @brief Parses a DateRange from OpenStreetMap.
 Currently only DateRanges that last at least one day are supported. The Syntax is allowed inputs is described here: http://wiki.openstreetmap.org/wiki/Key:opening_hours. <p>
 @author Robin Boldt
 */
@interface ComGraphhopperReaderOsmConditionalDateRangeParser : NSObject {
}

+ (JavaUtilCalendar *)createCalendar;

+ (ComGraphhopperReaderOsmConditionalParsedCalendar *)parseDateStringWithNSString:(NSString *)dateString;

+ (ComGraphhopperReaderOsmConditionalDateRange *)parseDateRangeWithNSString:(NSString *)dateRangeString;

- (instancetype)init;

@end

FOUNDATION_EXPORT BOOL ComGraphhopperReaderOsmConditionalDateRangeParser_initialized;
J2OBJC_STATIC_INIT(ComGraphhopperReaderOsmConditionalDateRangeParser)

CF_EXTERN_C_BEGIN

FOUNDATION_EXPORT JavaUtilCalendar *ComGraphhopperReaderOsmConditionalDateRangeParser_createCalendar();

FOUNDATION_EXPORT ComGraphhopperReaderOsmConditionalParsedCalendar *ComGraphhopperReaderOsmConditionalDateRangeParser_parseDateStringWithNSString_(NSString *dateString);

FOUNDATION_EXPORT ComGraphhopperReaderOsmConditionalDateRange *ComGraphhopperReaderOsmConditionalDateRangeParser_parseDateRangeWithNSString_(NSString *dateRangeString);

FOUNDATION_EXPORT JavaTextDateFormat *ComGraphhopperReaderOsmConditionalDateRangeParser_YEAR_MONTH_DAY_DF_;
J2OBJC_STATIC_FIELD_GETTER(ComGraphhopperReaderOsmConditionalDateRangeParser, YEAR_MONTH_DAY_DF_, JavaTextDateFormat *)

FOUNDATION_EXPORT JavaTextDateFormat *ComGraphhopperReaderOsmConditionalDateRangeParser_MONTH_DAY_DF_;
J2OBJC_STATIC_FIELD_GETTER(ComGraphhopperReaderOsmConditionalDateRangeParser, MONTH_DAY_DF_, JavaTextDateFormat *)

FOUNDATION_EXPORT JavaTextDateFormat *ComGraphhopperReaderOsmConditionalDateRangeParser_MONTH_DAY2_DF_;
J2OBJC_STATIC_FIELD_GETTER(ComGraphhopperReaderOsmConditionalDateRangeParser, MONTH_DAY2_DF_, JavaTextDateFormat *)

FOUNDATION_EXPORT JavaTextDateFormat *ComGraphhopperReaderOsmConditionalDateRangeParser_YEAR_MONTH_DF_;
J2OBJC_STATIC_FIELD_GETTER(ComGraphhopperReaderOsmConditionalDateRangeParser, YEAR_MONTH_DF_, JavaTextDateFormat *)

FOUNDATION_EXPORT JavaTextDateFormat *ComGraphhopperReaderOsmConditionalDateRangeParser_MONTH_DF_;
J2OBJC_STATIC_FIELD_GETTER(ComGraphhopperReaderOsmConditionalDateRangeParser, MONTH_DF_, JavaTextDateFormat *)

FOUNDATION_EXPORT id<JavaUtilList> ComGraphhopperReaderOsmConditionalDateRangeParser_DAY_NAMES_;
J2OBJC_STATIC_FIELD_GETTER(ComGraphhopperReaderOsmConditionalDateRangeParser, DAY_NAMES_, id<JavaUtilList>)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(ComGraphhopperReaderOsmConditionalDateRangeParser)

#endif // _ComGraphhopperReaderOsmConditionalDateRangeParser_H_
