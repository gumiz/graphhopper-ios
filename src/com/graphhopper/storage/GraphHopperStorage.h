//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java
//

#ifndef _GraphHopperStorage_H_
#define _GraphHopperStorage_H_

@class BBox;
@class BaseGraph;
@class EncodingManager;
@class IOSClass;
@class StorableProperties;
@protocol AllEdgesIterator;
@protocol ComGraphhopperRoutingWeightingWeighting;
@protocol Directory;
@protocol EdgeExplorer;
@protocol EdgeFilter;
@protocol EdgeIteratorState;
@protocol GraphExtension;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol NodeAccess;

#include "J2ObjC_header.h"
#include "com/graphhopper/storage/Graph.h"
#include "com/graphhopper/storage/GraphStorage.h"
#include "com/graphhopper/storage/InternalGraphEventListener.h"

/**
 @brief This class manages all storage related methods and delegates the calls to the associated graphs.
 The associated graphs manage their own necessary data structures and are used to provide e.g. different traversal methods. By default this class implements the graph interface and results in identical behavior as the Graph instance from getGraph(Graph.class) <p>
 @author Peter Karich
 */
@interface GraphHopperStorage : NSObject < GraphStorage, Graph > {
}

- (instancetype)initWithDirectory:(id<Directory>)dir
              withEncodingManager:(EncodingManager *)encodingManager
                      withBoolean:(jboolean)withElevation
               withGraphExtension:(id<GraphExtension>)extendedStorage;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)chWeightings
                       withDirectory:(id<Directory>)dir
                 withEncodingManager:(EncodingManager *)encodingManager
                         withBoolean:(jboolean)withElevation
                  withGraphExtension:(id<GraphExtension>)extendedStorage;

/**
 @brief This method returns the routing graph for the specified weighting, could be potentially filled with shortcuts.
 */
- (id)getGraphWithIOSClass:(IOSClass *)clazz
withComGraphhopperRoutingWeightingWeighting:(id<ComGraphhopperRoutingWeightingWeighting>)weighting;

- (id)getGraphWithIOSClass:(IOSClass *)clazz;

- (jboolean)isCHPossible;

- (id<JavaUtilList>)getCHWeightings;

/**
 @return the directory where this graph is stored.
 */
- (id<Directory>)getDirectory;

- (void)setSegmentSizeWithInt:(jint)bytes;

/**
 @brief After configuring this storage you need to create it explicitly.
 */
- (GraphHopperStorage *)createWithLong:(jlong)byteCount;

- (EncodingManager *)getEncodingManager;

- (StorableProperties *)getProperties;

- (void)setAdditionalEdgeFieldWithLong:(jlong)edgePointer
                               withInt:(jint)value;

- (void)markNodeRemovedWithInt:(jint)index;

- (jboolean)isNodeRemovedWithInt:(jint)index;

- (void)optimize;

- (jboolean)loadExisting;

- (void)flush;

- (void)close;

- (jboolean)isClosed;

- (jlong)getCapacity;

/**
 @brief Avoid that edges and nodes of the base graph are further modified.
 Necessary as hook for e.g. ch graphs on top to initilize themself
 */
- (void)freeze;

- (jboolean)isFrozen;

- (NSString *)toDetailsString;

- (NSString *)description;

- (id<Graph>)getBaseGraph;

- (jint)getNodes;

- (id<NodeAccess>)getNodeAccess;

- (BBox *)getBounds;

- (id<EdgeIteratorState>)edgeWithInt:(jint)a
                             withInt:(jint)b;

- (id<EdgeIteratorState>)edgeWithInt:(jint)a
                             withInt:(jint)b
                          withDouble:(jdouble)distance
                         withBoolean:(jboolean)bothDirections;

- (id<EdgeIteratorState>)getEdgeIteratorStateWithInt:(jint)edgeId
                                             withInt:(jint)adjNode;

- (id<AllEdgesIterator>)getAllEdges;

- (id<EdgeExplorer>)createEdgeExplorerWithEdgeFilter:(id<EdgeFilter>)filter;

- (id<EdgeExplorer>)createEdgeExplorer;

- (id<Graph>)copyToWithGraph:(id<Graph>)g OBJC_METHOD_FAMILY_NONE;

- (id<GraphExtension>)getExtension;

@end

J2OBJC_EMPTY_STATIC_INIT(GraphHopperStorage)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef GraphHopperStorage ComGraphhopperStorageGraphHopperStorage;

J2OBJC_TYPE_LITERAL_HEADER(GraphHopperStorage)

@interface GraphHopperStorage_$1 : NSObject < InternalGraphEventListener > {
}

- (void)initStorage OBJC_METHOD_FAMILY_NONE;

- (void)freeze;

- (instancetype)initWithGraphHopperStorage:(GraphHopperStorage *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GraphHopperStorage_$1)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GraphHopperStorage_$1)

#endif // _GraphHopperStorage_H_
