//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/storage/index/BresenhamLine.java
//

#ifndef _BresenhamLine_H_
#define _BresenhamLine_H_

#include "J2ObjC_header.h"
#include "com/graphhopper/storage/index/PointEmitter.h"

/**
 @brief We need the supercover line.
 The best algorithm is a 'voxel grid traversal algorithm' and described in "A Fast Voxel Traversal Algorithm for Ray Tracing" by John Amanatides and Andrew Woo (1987): http://www.cse.yorku.ca/~amana/research/grid.pdf <p> Other methods we used are Bresenham (only integer start and end values) and Xiaolin Wu (anti aliasing). See some discussion here: http://stackoverflow.com/a/3234074/194609 and here http://stackoverflow.com/q/24679963/194609 <p>
 @author Peter Karich
 */
@interface BresenhamLine : NSObject {
}

+ (void)calcPointsWithInt:(jint)y1
                  withInt:(jint)x1
                  withInt:(jint)y2
                  withInt:(jint)x2
         withPointEmitter:(id<PointEmitter>)emitter;

+ (void)bresenhamWithInt:(jint)y1
                 withInt:(jint)x1
                 withInt:(jint)y2
                 withInt:(jint)x2
        withPointEmitter:(id<PointEmitter>)emitter;

/**
 @brief Calls the Bresenham algorithm but make it working for double values
 */
+ (void)calcPointsWithDouble:(jdouble)lat1
                  withDouble:(jdouble)lon1
                  withDouble:(jdouble)lat2
                  withDouble:(jdouble)lon2
            withPointEmitter:(id<PointEmitter>)emitter
                  withDouble:(jdouble)offsetLat
                  withDouble:(jdouble)offsetLon
                  withDouble:(jdouble)deltaLat
                  withDouble:(jdouble)deltaLon;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(BresenhamLine)

CF_EXTERN_C_BEGIN

FOUNDATION_EXPORT void BresenhamLine_calcPointsWithInt_withInt_withInt_withInt_withPointEmitter_(jint y1, jint x1, jint y2, jint x2, id<PointEmitter> emitter);

FOUNDATION_EXPORT void BresenhamLine_bresenhamWithInt_withInt_withInt_withInt_withPointEmitter_(jint y1, jint x1, jint y2, jint x2, id<PointEmitter> emitter);

FOUNDATION_EXPORT void BresenhamLine_calcPointsWithDouble_withDouble_withDouble_withDouble_withPointEmitter_withDouble_withDouble_withDouble_withDouble_(jdouble lat1, jdouble lon1, jdouble lat2, jdouble lon2, id<PointEmitter> emitter, jdouble offsetLat, jdouble offsetLon, jdouble deltaLat, jdouble deltaLon);
CF_EXTERN_C_END

typedef BresenhamLine ComGraphhopperStorageIndexBresenhamLine;

J2OBJC_TYPE_LITERAL_HEADER(BresenhamLine)

@interface BresenhamLine_$1 : NSObject < PointEmitter > {
}

- (void)setWithDouble:(jdouble)lat
           withDouble:(jdouble)lon;

- (instancetype)initWithPointEmitter:(id<PointEmitter>)capture$0
                          withDouble:(jdouble)capture$1
                          withDouble:(jdouble)capture$2
                          withDouble:(jdouble)capture$3
                          withDouble:(jdouble)capture$4;

@end

J2OBJC_EMPTY_STATIC_INIT(BresenhamLine_$1)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(BresenhamLine_$1)

#endif // _BresenhamLine_H_
