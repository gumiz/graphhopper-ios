//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/storage/SynchedDAWrapper.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/graphhopper/storage/DAType.h"
#include "com/graphhopper/storage/DataAccess.h"
#include "com/graphhopper/storage/SynchedDAWrapper.h"

@interface SynchedDAWrapper () {
 @public
  id<DataAccess> inner_;
  DAType *type_;
}
@end

J2OBJC_FIELD_SETTER(SynchedDAWrapper, inner_, id<DataAccess>)
J2OBJC_FIELD_SETTER(SynchedDAWrapper, type_, DAType *)

@implementation SynchedDAWrapper

- (instancetype)initWithDataAccess:(id<DataAccess>)inner {
  if (self = [super init]) {
    SynchedDAWrapper_set_inner_(self, inner);
    SynchedDAWrapper_setAndConsume_type_(self, [[DAType alloc] initWithDAType:[((id<DataAccess>) nil_chk(inner)) getType] withBoolean:YES]);
  }
  return self;
}

- (NSString *)getName {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) getName];
  }
}

- (void)renameWithNSString:(NSString *)newName {
  @synchronized(self) {
    [((id<DataAccess>) nil_chk(inner_)) renameWithNSString:newName];
  }
}

- (void)setIntWithLong:(jlong)bytePos
               withInt:(jint)value {
  @synchronized(self) {
    [((id<DataAccess>) nil_chk(inner_)) setIntWithLong:bytePos withInt:value];
  }
}

- (jint)getIntWithLong:(jlong)bytePos {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) getIntWithLong:bytePos];
  }
}

- (void)setShortWithLong:(jlong)bytePos
               withShort:(jshort)value {
  @synchronized(self) {
    [((id<DataAccess>) nil_chk(inner_)) setShortWithLong:bytePos withShort:value];
  }
}

- (jshort)getShortWithLong:(jlong)bytePos {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) getShortWithLong:bytePos];
  }
}

- (void)setBytesWithLong:(jlong)bytePos
           withByteArray:(IOSByteArray *)values
                 withInt:(jint)length {
  @synchronized(self) {
    [((id<DataAccess>) nil_chk(inner_)) setBytesWithLong:bytePos withByteArray:values withInt:length];
  }
}

- (void)getBytesWithLong:(jlong)bytePos
           withByteArray:(IOSByteArray *)values
                 withInt:(jint)length {
  @synchronized(self) {
    [((id<DataAccess>) nil_chk(inner_)) getBytesWithLong:bytePos withByteArray:values withInt:length];
  }
}

- (void)setHeaderWithInt:(jint)bytePos
                 withInt:(jint)value {
  @synchronized(self) {
    [((id<DataAccess>) nil_chk(inner_)) setHeaderWithInt:bytePos withInt:value];
  }
}

- (jint)getHeaderWithInt:(jint)bytePos {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) getHeaderWithInt:bytePos];
  }
}

- (id<DataAccess>)createWithLong:(jlong)bytes {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) createWithLong:bytes];
  }
}

- (jboolean)ensureCapacityWithLong:(jlong)bytes {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) ensureCapacityWithLong:bytes];
  }
}

- (void)trimToWithLong:(jlong)bytes {
  @synchronized(self) {
    [((id<DataAccess>) nil_chk(inner_)) trimToWithLong:bytes];
  }
}

- (id<DataAccess>)copyToWithDataAccess:(id<DataAccess>)da {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) copyToWithDataAccess:da];
  }
}

- (id<DataAccess>)setSegmentSizeWithInt:(jint)bytes {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) setSegmentSizeWithInt:bytes];
  }
}

- (jint)getSegmentSize {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) getSegmentSize];
  }
}

- (jint)getSegments {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) getSegments];
  }
}

- (jboolean)loadExisting {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) loadExisting];
  }
}

- (void)flush {
  @synchronized(self) {
    [((id<DataAccess>) nil_chk(inner_)) flush];
  }
}

- (void)close {
  @synchronized(self) {
    [((id<DataAccess>) nil_chk(inner_)) close];
  }
}

- (jboolean)isClosed {
  return [((id<DataAccess>) nil_chk(inner_)) isClosed];
}

- (jlong)getCapacity {
  @synchronized(self) {
    return [((id<DataAccess>) nil_chk(inner_)) getCapacity];
  }
}

- (DAType *)getType {
  return type_;
}

- (void)dealloc {
  RELEASE_(inner_);
  RELEASE_(type_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(SynchedDAWrapper *)other {
  [super copyAllFieldsTo:other];
  SynchedDAWrapper_set_inner_(other, inner_);
  SynchedDAWrapper_set_type_(other, type_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDataAccess:", "SynchedDAWrapper", NULL, 0x1, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x21, NULL },
    { "renameWithNSString:", "rename", "V", 0x21, NULL },
    { "setIntWithLong:withInt:", "setInt", "V", 0x21, NULL },
    { "getIntWithLong:", "getInt", "I", 0x21, NULL },
    { "setShortWithLong:withShort:", "setShort", "V", 0x21, NULL },
    { "getShortWithLong:", "getShort", "S", 0x21, NULL },
    { "setBytesWithLong:withByteArray:withInt:", "setBytes", "V", 0x21, NULL },
    { "getBytesWithLong:withByteArray:withInt:", "getBytes", "V", 0x21, NULL },
    { "setHeaderWithInt:withInt:", "setHeader", "V", 0x21, NULL },
    { "getHeaderWithInt:", "getHeader", "I", 0x21, NULL },
    { "createWithLong:", "create", "Lcom.graphhopper.storage.DataAccess;", 0x21, NULL },
    { "ensureCapacityWithLong:", "ensureCapacity", "Z", 0x21, NULL },
    { "trimToWithLong:", "trimTo", "V", 0x21, NULL },
    { "copyToWithDataAccess:", "copyTo", "Lcom.graphhopper.storage.DataAccess;", 0x21, NULL },
    { "setSegmentSizeWithInt:", "setSegmentSize", "Lcom.graphhopper.storage.DataAccess;", 0x21, NULL },
    { "getSegmentSize", NULL, "I", 0x21, NULL },
    { "getSegments", NULL, "I", 0x21, NULL },
    { "loadExisting", NULL, "Z", 0x21, NULL },
    { "flush", NULL, "V", 0x21, NULL },
    { "close", NULL, "V", 0x21, NULL },
    { "isClosed", NULL, "Z", 0x1, NULL },
    { "getCapacity", NULL, "J", 0x21, NULL },
    { "getType", NULL, "Lcom.graphhopper.storage.DAType;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inner_", NULL, 0x12, "Lcom.graphhopper.storage.DataAccess;", NULL,  },
    { "type_", NULL, 0x12, "Lcom.graphhopper.storage.DAType;", NULL,  },
  };
  static const J2ObjcClassInfo _SynchedDAWrapper = { 1, "SynchedDAWrapper", "com.graphhopper.storage", NULL, 0x0, 24, methods, 2, fields, 0, NULL};
  return &_SynchedDAWrapper;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SynchedDAWrapper)
