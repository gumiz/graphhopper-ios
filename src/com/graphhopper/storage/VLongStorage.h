//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/storage/VLongStorage.java
//

#ifndef _VLongStorage_H_
#define _VLongStorage_H_

@class IOSByteArray;

#include "J2ObjC_header.h"

/**
 @brief Taken from lucene DataOutput.
 VLong's are longs which have variable length depending on the size. When used together with 'delta compression' it is likely that you'll use only 1 byte per value.
 */
@interface VLongStorage : NSObject {
}

- (instancetype)init;

- (instancetype)initWithInt:(jint)cap;

- (instancetype)initWithByteArray:(IOSByteArray *)bytes;

- (void)seekWithLong:(jlong)pos;

- (jlong)getPosition;

- (jlong)getLength;

- (jbyte)readByte;

- (void)writeByteWithByte:(jbyte)b;

/**
 @brief Writes an long in a variable-length format.
 Writes between one and nine bytes. Smaller values take fewer bytes. Negative numbers are not supported. <p> The format is described further in Lucene its DataOutput#writeVInt(int) <p> See DataInput readVLong of Lucene
 */
- (void)writeVLongWithLong:(jlong)i;

/**
 @brief Reads a long stored in variable-length format.
 Reads between one and nine bytes. Smaller values take fewer bytes. Negative numbers are not supported. <p> The format is described further in DataOutput writeVInt(int) from Lucene.
 */
- (jlong)readVLong;

- (void)trimToSize;

- (IOSByteArray *)getBytes;

@end

J2OBJC_EMPTY_STATIC_INIT(VLongStorage)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef VLongStorage ComGraphhopperStorageVLongStorage;

J2OBJC_TYPE_LITERAL_HEADER(VLongStorage)

#endif // _VLongStorage_H_
