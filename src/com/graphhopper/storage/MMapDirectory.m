//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/storage/MMapDirectory.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/storage/DAType.h"
#include "com/graphhopper/storage/MMapDirectory.h"
#include "java/lang/IllegalStateException.h"

@interface MMapDirectory ()
- (instancetype)init;
@end

@implementation MMapDirectory

- (instancetype)init {
  if (self = [self initMMapDirectoryWithNSString:@""]) {
    @throw [[[JavaLangIllegalStateException alloc] initWithNSString:@"reserved for direct mapped memory"] autorelease];
  }
  return self;
}

- (instancetype)initMMapDirectoryWithNSString:(NSString *)_location {
  return [super initWithNSString:_location withDAType:DAType_get_MMAP_()];
}

- (instancetype)initWithNSString:(NSString *)_location {
  return [self initMMapDirectoryWithNSString:_location];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MMapDirectory", NULL, 0x2, NULL },
    { "initWithNSString:", "MMapDirectory", NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _MMapDirectory = { 1, "MMapDirectory", "com.graphhopper.storage", NULL, 0x1, 2, methods, 0, NULL, 0, NULL};
  return &_MMapDirectory;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(MMapDirectory)
