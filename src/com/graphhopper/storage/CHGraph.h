//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/storage/CHGraph.java
//

#ifndef _CHGraph_H_
#define _CHGraph_H_

@protocol AllCHEdgesIterator;
@protocol CHEdgeExplorer;
@protocol CHEdgeIteratorState;
@protocol EdgeFilter;

#include "J2ObjC_header.h"
#include "com/graphhopper/storage/Graph.h"

/**
 @brief Extended graph interface which supports Contraction Hierarchies.
 Ie. storing and retrieving the levels for a node and creating shortcuts, which are additional 'artificial' edges to speedup traversal in certain cases. <p>
 @author Peter Karich
 */
@protocol CHGraph < Graph, NSObject, JavaObject >
/**
 @brief This methods sets the level of the specified node.
 */
- (void)setLevelWithInt:(jint)nodeId
                withInt:(jint)level;

/**
 @return the level of the specified node.
 */
- (jint)getLevelWithInt:(jint)nodeId;

- (jboolean)isShortcutWithInt:(jint)edgeId;

/**
 @brief This method creates a shortcut between a to b which is nearly identical to creating an edge except that it can be excluded or included for certain traversals or algorithms.
 */
- (id<CHEdgeIteratorState>)shortcutWithInt:(jint)a
                                   withInt:(jint)b;

- (id<CHEdgeIteratorState>)getEdgeIteratorStateWithInt:(jint)edgeId
                                               withInt:(jint)endNode;

- (id<CHEdgeExplorer>)createEdgeExplorer;

- (id<CHEdgeExplorer>)createEdgeExplorerWithEdgeFilter:(id<EdgeFilter>)filter;

- (id<AllCHEdgesIterator>)getAllEdges;

@end

J2OBJC_EMPTY_STATIC_INIT(CHGraph)

#define ComGraphhopperStorageCHGraph CHGraph

J2OBJC_TYPE_LITERAL_HEADER(CHGraph)

#endif // _CHGraph_H_
