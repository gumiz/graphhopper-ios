//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/storage/IntIterator.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/storage/IntIterator.h"

@interface IntIterator : NSObject
@end

@implementation IntIterator

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "next", NULL, "Z", 0x401, NULL },
    { "getValue", NULL, "I", 0x401, NULL },
    { "remove", NULL, "V", 0x401, NULL },
  };
  static const J2ObjcClassInfo _IntIterator = { 1, "IntIterator", "com.graphhopper.storage", NULL, 0x201, 3, methods, 0, NULL, 0, NULL};
  return &_IntIterator;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(IntIterator)

@implementation IntIterator_Helper

+ (jint)countWithIntIterator:(id<IntIterator>)iter {
  return IntIterator_Helper_countWithIntIterator_(iter);
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "countWithIntIterator:", "count", "I", 0x9, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _IntIterator_Helper = { 1, "Helper", "com.graphhopper.storage", "IntIterator", 0x9, 2, methods, 0, NULL, 0, NULL};
  return &_IntIterator_Helper;
}

@end

jint IntIterator_Helper_countWithIntIterator_(id<IntIterator> iter) {
  IntIterator_Helper_init();
  jint counter = 0;
  while ([((id<IntIterator>) nil_chk(iter)) next]) {
    ++counter;
  }
  return counter;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IntIterator_Helper)
