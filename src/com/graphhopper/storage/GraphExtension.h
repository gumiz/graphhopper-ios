//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/storage/GraphExtension.java
//

#ifndef _GraphExtension_H_
#define _GraphExtension_H_

@protocol Directory;
@protocol Graph;

#include "J2ObjC_header.h"
#include "com/graphhopper/storage/Storable.h"

/**
 @brief If you need custom storages, like turn cost tables, or osmid tables for your graph you implement this interface and put it in any graph storage you want.
 */
@protocol GraphExtension < Storable, NSObject, JavaObject >
/**
 @return true, if and only if, if an additional field at the graphs node storage is required
 */
- (jboolean)isRequireNodeField;

/**
 @return true, if and only if, if an additional field at the graphs edge storage is required
 */
- (jboolean)isRequireEdgeField;

/**
 @return the default field value which will be set for default when creating nodes
 */
- (jint)getDefaultNodeFieldValue;

/**
 @return the default field value which will be set for default when creating edges
 */
- (jint)getDefaultEdgeFieldValue;

/**
 @brief initializes the extended storage by giving the base graph
 */
- (void)init__WithGraph:(id<Graph>)graph
          withDirectory:(id<Directory>)dir OBJC_METHOD_FAMILY_NONE;

/**
 @brief sets the segment size in all additional data storages
 */
- (void)setSegmentSizeWithInt:(jint)bytes;

/**
 @brief creates a copy of this extended storage
 */
- (id<GraphExtension>)copyToWithGraphExtension:(id<GraphExtension>)extStorage OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(GraphExtension)

#define ComGraphhopperStorageGraphExtension GraphExtension

J2OBJC_TYPE_LITERAL_HEADER(GraphExtension)

/**
 @brief default implementation defines no additional fields or any logic. there's like nothing , like the default behavior.
 */
@interface GraphExtension_NoOpExtension : NSObject < GraphExtension > {
}

- (jboolean)isRequireNodeField;

- (jboolean)isRequireEdgeField;

- (jint)getDefaultNodeFieldValue;

- (jint)getDefaultEdgeFieldValue;

- (void)init__WithGraph:(id<Graph>)graph
          withDirectory:(id<Directory>)dir OBJC_METHOD_FAMILY_NONE;

- (id<GraphExtension>)createWithLong:(jlong)byteCount;

- (jboolean)loadExisting;

- (void)setSegmentSizeWithInt:(jint)bytes;

- (void)flush;

- (void)close;

- (jlong)getCapacity;

- (id<GraphExtension>)copyToWithGraphExtension:(id<GraphExtension>)extStorage OBJC_METHOD_FAMILY_NONE;

- (NSString *)description;

- (jboolean)isClosed;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(GraphExtension_NoOpExtension)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(GraphExtension_NoOpExtension)

#endif // _GraphExtension_H_
