//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/storage/Directory.java
//

#ifndef _Directory_H_
#define _Directory_H_

@class DAType;
@class JavaNioByteOrder;
@protocol DataAccess;
@protocol JavaUtilCollection;

#include "J2ObjC_header.h"

/**
 @brief Maintains a collection of DataAccess objects stored at the same location.
 One GraphStorage per Directory as we need one to maintain one DataAccess object for nodes, edges and location2id index. <p>
 @author Peter Karich
 */
@protocol Directory < NSObject, JavaObject >

/**
 @return an id or location in the local filesystem.
 */
- (NSString *)getLocation;

/**
 @return the order in which the data is stored
 */
- (JavaNioByteOrder *)getByteOrder;

/**
 @brief Tries to find the object with that name if not existent it creates one and associates the location with it.
 A name is unique in one Directory.
 */
- (id<DataAccess>)findWithNSString:(NSString *)name;

- (id<DataAccess>)findWithNSString:(NSString *)name
                        withDAType:(DAType *)type;

/**
 @brief Removes the specified object from the directory.
 */
- (void)removeWithDataAccess:(id<DataAccess>)da;

/**
 @return the default type of a newly created DataAccess object
 */
- (DAType *)getDefaultType;

/**
 @brief Removes all contained objects from the directory and releases its resources.
 */
- (void)clear;

/**
 @brief Returns all created directories.
 */
- (id<JavaUtilCollection>)getAll;

- (id<Directory>)create;

@end

J2OBJC_EMPTY_STATIC_INIT(Directory)

#define ComGraphhopperStorageDirectory Directory

J2OBJC_TYPE_LITERAL_HEADER(Directory)

#endif // _Directory_H_
