//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/storage/MMapDataAccess.java
//

#ifndef _MMapDataAccess_H_
#define _MMapDataAccess_H_

@class DAType;
@class IOSByteArray;
@class JavaIoRandomAccessFile;
@class JavaNioByteBuffer;
@class JavaNioByteOrder;
@protocol DataAccess;
@protocol JavaUtilList;

#include "J2ObjC_header.h"
#include "com/graphhopper/storage/AbstractDataAccess.h"

/**
 @brief This is a data structure which uses the operating system to synchronize between disc and memory.
 Use SynchedDAWrapper if you intent to use this from multiple threads! <p>
 @author Peter Karich
 */
@interface MMapDataAccess : AbstractDataAccess {
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)location
            withJavaNioByteOrder:(JavaNioByteOrder *)order
                     withBoolean:(jboolean)allowWrites;

- (MMapDataAccess *)cleanAndRemapWithBoolean:(jboolean)cleanAndRemap;

- (MMapDataAccess *)createWithLong:(jlong)bytes;

- (id<DataAccess>)copyToWithDataAccess:(id<DataAccess>)da OBJC_METHOD_FAMILY_NONE;

- (jboolean)ensureCapacityWithLong:(jlong)bytes;

- (jboolean)mapItWithLong:(jlong)offset
                 withLong:(jlong)byteCount
              withBoolean:(jboolean)clearNew;

- (jboolean)loadExisting;

- (void)flush;

- (void)close;

/**
 @param forceClean if true the clean hack (system.gc) will be executed and forces the system to cleanup the mmap resources. Set false if you need to close many MMapDataAccess objects.
 */
- (void)closeWithBoolean:(jboolean)forceClean;

- (void)setIntWithLong:(jlong)bytePos
               withInt:(jint)value;

- (jint)getIntWithLong:(jlong)bytePos;

- (void)setShortWithLong:(jlong)bytePos
               withShort:(jshort)value;

- (jshort)getShortWithLong:(jlong)bytePos;

- (void)setBytesWithLong:(jlong)bytePos
           withByteArray:(IOSByteArray *)values
                 withInt:(jint)length;

- (void)getBytesWithLong:(jlong)bytePos
           withByteArray:(IOSByteArray *)values
                 withInt:(jint)length;

- (jlong)getCapacity;

- (jint)getSegments;

- (void)trimToWithLong:(jlong)capacity;

- (jboolean)releaseSegmentWithInt:(jint)segNumber;

- (void)renameWithNSString:(NSString *)newName;

- (DAType *)getType;

@end

J2OBJC_EMPTY_STATIC_INIT(MMapDataAccess)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef MMapDataAccess ComGraphhopperStorageMMapDataAccess;

J2OBJC_TYPE_LITERAL_HEADER(MMapDataAccess)

#endif // _MMapDataAccess_H_
