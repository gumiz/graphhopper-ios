//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/storage/SynchedDAWrapper.java
//

#ifndef _SynchedDAWrapper_H_
#define _SynchedDAWrapper_H_

@class DAType;
@class IOSByteArray;

#include "J2ObjC_header.h"
#include "com/graphhopper/storage/DataAccess.h"

/**
 @brief A simple wrapper to synchronize every DataAccess object.
 <p>
 @author Peter Karich
 */
@interface SynchedDAWrapper : NSObject < DataAccess > {
}

- (instancetype)initWithDataAccess:(id<DataAccess>)inner;

- (NSString *)getName;

- (void)renameWithNSString:(NSString *)newName;

- (void)setIntWithLong:(jlong)bytePos
               withInt:(jint)value;

- (jint)getIntWithLong:(jlong)bytePos;

- (void)setShortWithLong:(jlong)bytePos
               withShort:(jshort)value;

- (jshort)getShortWithLong:(jlong)bytePos;

- (void)setBytesWithLong:(jlong)bytePos
           withByteArray:(IOSByteArray *)values
                 withInt:(jint)length;

- (void)getBytesWithLong:(jlong)bytePos
           withByteArray:(IOSByteArray *)values
                 withInt:(jint)length;

- (void)setHeaderWithInt:(jint)bytePos
                 withInt:(jint)value;

- (jint)getHeaderWithInt:(jint)bytePos;

- (id<DataAccess>)createWithLong:(jlong)bytes;

- (jboolean)ensureCapacityWithLong:(jlong)bytes;

- (void)trimToWithLong:(jlong)bytes;

- (id<DataAccess>)copyToWithDataAccess:(id<DataAccess>)da OBJC_METHOD_FAMILY_NONE;

- (id<DataAccess>)setSegmentSizeWithInt:(jint)bytes;

- (jint)getSegmentSize;

- (jint)getSegments;

- (jboolean)loadExisting;

- (void)flush;

- (void)close;

- (jboolean)isClosed;

- (jlong)getCapacity;

- (DAType *)getType;

@end

J2OBJC_EMPTY_STATIC_INIT(SynchedDAWrapper)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef SynchedDAWrapper ComGraphhopperStorageSynchedDAWrapper;

J2OBJC_TYPE_LITERAL_HEADER(SynchedDAWrapper)

#endif // _SynchedDAWrapper_H_
