//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/coll/GHSortedCollection.java
//

#ifndef _GHSortedCollection_H_
#define _GHSortedCollection_H_

@class JavaUtilTreeMap;

#include "J2ObjC_header.h"

/**
 @brief A priority queue implemented by a treemap to allow fast key update.
 Or should we use a standard b-tree? <p>
 @author Peter Karich
 */
@interface GHSortedCollection : NSObject {
}

- (instancetype)init;

- (void)clear;

- (void)removeWithInt:(jint)key
              withInt:(jint)value;

- (void)updateWithInt:(jint)key
              withInt:(jint)oldValue
              withInt:(jint)value;

- (void)insertWithInt:(jint)key
              withInt:(jint)value;

- (jint)peekValue;

- (jint)peekKey;

/**
 @return removes the smallest entry (key and value) from this collection
 */
- (jint)pollKey;

- (jint)getSize;

- (jboolean)isEmpty;

- (jint)getSlidingMeanValue;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GHSortedCollection)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef GHSortedCollection ComGraphhopperCollGHSortedCollection;

J2OBJC_TYPE_LITERAL_HEADER(GHSortedCollection)

#endif // _GHSortedCollection_H_
