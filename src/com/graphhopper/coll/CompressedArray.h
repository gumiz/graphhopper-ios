//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/coll/CompressedArray.java
//

#ifndef _CompressedArray_H_
#define _CompressedArray_H_

@class GHPoint;
@class IOSByteArray;
@class SpatialKeyAlgo;
@class VLongStorage;
@protocol JavaUtilList;

#include "J2ObjC_header.h"

/**
 @brief Stores the entries in compressed segments.
 The methods de(compress) are taken from lucene CompressionTools. Before accessing the stored values be sure you called flush. <p>
 @author Peter Karich
 */
@interface CompressedArray : NSObject {
}

- (instancetype)init;

/**
 @param _segments initialize with this number of segments
 @param entriesPerSeg a static number which sets the entries per segment
 @param approxBytesPerEntry an *approximative* number (as entries can have different lengths)
 */
- (instancetype)initWithInt:(jint)_segments
                    withInt:(jint)entriesPerSeg
                    withInt:(jint)approxBytesPerEntry;

/**
 @brief Compresses the specified byte range using the specified compressionLevel (constants are defined in java.util.zip.Deflater).
 */
+ (IOSByteArray *)compressWithByteArray:(IOSByteArray *)value
                                withInt:(jint)offset
                                withInt:(jint)length
                                withInt:(jint)compressionLevel;

/**
 @brief Decompress the byte array previously returned by compress
 */
+ (IOSByteArray *)decompressWithByteArray:(IOSByteArray *)value;

- (CompressedArray *)setCompressionLevelWithInt:(jint)compressionLevel;

- (void)writeWithDouble:(jdouble)lat
             withDouble:(jdouble)lon;

- (GHPoint *)getWithLong:(jlong)index;

- (void)flush;

- (jfloat)calcMemInMB;

@end

J2OBJC_EMPTY_STATIC_INIT(CompressedArray)

CF_EXTERN_C_BEGIN

FOUNDATION_EXPORT IOSByteArray *CompressedArray_compressWithByteArray_withInt_withInt_withInt_(IOSByteArray *value, jint offset, jint length, jint compressionLevel);

FOUNDATION_EXPORT IOSByteArray *CompressedArray_decompressWithByteArray_(IOSByteArray *value);
CF_EXTERN_C_END

typedef CompressedArray ComGraphhopperCollCompressedArray;

J2OBJC_TYPE_LITERAL_HEADER(CompressedArray)

#endif // _CompressedArray_H_
