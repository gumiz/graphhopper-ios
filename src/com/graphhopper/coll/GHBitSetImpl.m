//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/coll/GHBitSetImpl.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/coll/GHBitSet.h"
#include "com/graphhopper/coll/GHBitSetImpl.h"

@implementation GHBitSetImpl

- (instancetype)init {
  return [super init];
}

- (instancetype)initWithInt:(jint)nbits {
  return [super initWithInt:nbits];
}

- (jboolean)containsWithInt:(jint)index {
  return [super getWithInt:index];
}

- (void)addWithInt:(jint)index {
  [super setWithInt:index];
}

- (jint)getCardinality {
  return [super cardinality];
}

- (jint)nextWithInt:(jint)index {
  return [super nextSetBitWithInt:index];
}

- (jint)nextClearWithInt:(jint)index {
  return [super nextClearBitWithInt:index];
}

- (void)removeWithInt:(jint)index {
  [super clearWithInt:index];
}

- (id<GHBitSet>)copyToWithGHBitSet:(id<GHBitSet>)bs {
  [((id<GHBitSet>) nil_chk(bs)) clear];
  if ([bs isKindOfClass:[GHBitSetImpl class]]) {
    [((GHBitSetImpl *) check_class_cast(bs, [GHBitSetImpl class])) or__WithJavaUtilBitSet:self];
  }
  else {
    for (jint index = [super nextSetBitWithInt:0]; index >= 0; index = [super nextSetBitWithInt:index + 1]) {
      [bs addWithInt:index];
    }
  }
  return bs;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "GHBitSetImpl", NULL, 0x1, NULL },
    { "initWithInt:", "GHBitSetImpl", NULL, 0x1, NULL },
    { "containsWithInt:", "contains", "Z", 0x11, NULL },
    { "addWithInt:", "add", "V", 0x11, NULL },
    { "getCardinality", NULL, "I", 0x11, NULL },
    { "nextWithInt:", "next", "I", 0x11, NULL },
    { "nextClearWithInt:", "nextClear", "I", 0x11, NULL },
    { "removeWithInt:", "remove", "V", 0x1, NULL },
    { "copyToWithGHBitSet:", "copyTo", "Lcom.graphhopper.coll.GHBitSet;", 0x11, NULL },
  };
  static const J2ObjcClassInfo _GHBitSetImpl = { 1, "GHBitSetImpl", "com.graphhopper.coll", NULL, 0x1, 9, methods, 0, NULL, 0, NULL};
  return &_GHBitSetImpl;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHBitSetImpl)
