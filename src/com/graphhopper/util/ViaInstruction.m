//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/util/ViaInstruction.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/graphhopper/util/Instruction.h"
#include "com/graphhopper/util/InstructionAnnotation.h"
#include "com/graphhopper/util/PointList.h"
#include "com/graphhopper/util/Translation.h"
#include "com/graphhopper/util/ViaInstruction.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"

@interface ViaInstruction () {
 @public
  jint viaPosition_;
}
@end

@implementation ViaInstruction

- (instancetype)initViaInstructionWithNSString:(NSString *)name
                     withInstructionAnnotation:(InstructionAnnotation *)ia
                                 withPointList:(PointList *)pl {
  if (self = [super initWithInt:Instruction_REACHED_VIA withNSString:name withInstructionAnnotation:ia withPointList:pl]) {
    viaPosition_ = -1;
  }
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
       withInstructionAnnotation:(InstructionAnnotation *)ia
                   withPointList:(PointList *)pl {
  return [self initViaInstructionWithNSString:name withInstructionAnnotation:ia withPointList:pl];
}

- (instancetype)initWithInstruction:(Instruction *)instr {
  if (self = [self initViaInstructionWithNSString:[((Instruction *) nil_chk(instr)) getName] withInstructionAnnotation:[instr getAnnotation] withPointList:[instr getPoints]]) {
    [self setDistanceWithDouble:[instr getDistance]];
    [self setTimeWithLong:[instr getTime]];
  }
  return self;
}

- (jint)getViaCount {
  if (viaPosition_ < 0) @throw [[[JavaLangIllegalStateException alloc] initWithNSString:JreStrcat("$$", @"Uninitialized via count in instruction ", [self getName])] autorelease];
  return viaPosition_;
}

- (void)setViaCountWithInt:(jint)count {
  self->viaPosition_ = count;
}

- (NSString *)getTurnDescriptionWithTranslation:(id<Translation>)tr {
  if (rawName_) return [self getName];
  return [((id<Translation>) nil_chk(tr)) trWithNSString:@"stopover" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(viaPosition_) } count:1 type:NSObject_class_()]];
}

- (void)copyAllFieldsTo:(ViaInstruction *)other {
  [super copyAllFieldsTo:other];
  other->viaPosition_ = viaPosition_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInstructionAnnotation:withPointList:", "ViaInstruction", NULL, 0x1, NULL },
    { "initWithInstruction:", "ViaInstruction", NULL, 0x1, NULL },
    { "getViaCount", NULL, "I", 0x1, NULL },
    { "setViaCountWithInt:", "setViaCount", "V", 0x1, NULL },
    { "getTurnDescriptionWithTranslation:", "getTurnDescription", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "viaPosition_", NULL, 0x2, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ViaInstruction = { 1, "ViaInstruction", "com.graphhopper.util", NULL, 0x1, 5, methods, 1, fields, 0, NULL};
  return &_ViaInstruction;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ViaInstruction)
