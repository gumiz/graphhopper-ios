//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/util/Parameters.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/util/Parameters.h"

@implementation Parameters

NSString * Parameters_ROUTING_INIT_PREFIX_ = @"routing.";

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ROUTING_INIT_PREFIX_", NULL, 0x18, "Ljava.lang.String;", &Parameters_ROUTING_INIT_PREFIX_,  },
  };
  static const J2ObjcClassInfo _Parameters = { 1, "Parameters", "com.graphhopper.util", NULL, 0x1, 1, methods, 1, fields, 0, NULL};
  return &_Parameters;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Parameters)

@implementation Parameters_Algorithms

NSString * Parameters_Algorithms_DIJKSTRA_BI_ = @"dijkstrabi";
NSString * Parameters_Algorithms_DIJKSTRA_ = @"dijkstra";
NSString * Parameters_Algorithms_DIJKSTRA_ONE_TO_MANY_ = @"dijkstra_one_to_many";
NSString * Parameters_Algorithms_ASTAR_ = @"astar";
NSString * Parameters_Algorithms_ASTAR_BI_ = @"astarbi";
NSString * Parameters_Algorithms_ALT_ROUTE_ = @"alternative_route";
NSString * Parameters_Algorithms_ROUND_TRIP_ = @"round_trip";

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DIJKSTRA_BI_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_DIJKSTRA_BI_,  },
    { "DIJKSTRA_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_DIJKSTRA_,  },
    { "DIJKSTRA_ONE_TO_MANY_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_DIJKSTRA_ONE_TO_MANY_,  },
    { "ASTAR_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_ASTAR_,  },
    { "ASTAR_BI_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_ASTAR_BI_,  },
    { "ALT_ROUTE_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_ALT_ROUTE_,  },
    { "ROUND_TRIP_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_ROUND_TRIP_,  },
  };
  static const J2ObjcClassInfo _Parameters_Algorithms = { 1, "Algorithms", "com.graphhopper.util", "Parameters", 0x19, 1, methods, 7, fields, 0, NULL};
  return &_Parameters_Algorithms;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Parameters_Algorithms)

@implementation Parameters_Algorithms_AltRoute

NSString * Parameters_Algorithms_AltRoute_MAX_PATHS_ = @"alternative_route.max_paths";
NSString * Parameters_Algorithms_AltRoute_MAX_WEIGHT_ = @"alternative_route.max_weight_factor";
NSString * Parameters_Algorithms_AltRoute_MAX_SHARE_ = @"alternative_route.max_share_factor";

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_PATHS_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_AltRoute_MAX_PATHS_,  },
    { "MAX_WEIGHT_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_AltRoute_MAX_WEIGHT_,  },
    { "MAX_SHARE_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_AltRoute_MAX_SHARE_,  },
  };
  static const J2ObjcClassInfo _Parameters_Algorithms_AltRoute = { 1, "AltRoute", "com.graphhopper.util", "Parameters$Algorithms", 0x19, 1, methods, 3, fields, 0, NULL};
  return &_Parameters_Algorithms_AltRoute;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Parameters_Algorithms_AltRoute)

@implementation Parameters_Algorithms_AStar

NSString * Parameters_Algorithms_AStar_EPSILON_ = @"astar.epsilon";

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "EPSILON_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_AStar_EPSILON_,  },
  };
  static const J2ObjcClassInfo _Parameters_Algorithms_AStar = { 1, "AStar", "com.graphhopper.util", "Parameters$Algorithms", 0x19, 1, methods, 1, fields, 0, NULL};
  return &_Parameters_Algorithms_AStar;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Parameters_Algorithms_AStar)

@implementation Parameters_Algorithms_AStarBi

NSString * Parameters_Algorithms_AStarBi_EPSILON_ = @"astarbi.epsilon";

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "EPSILON_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_AStarBi_EPSILON_,  },
  };
  static const J2ObjcClassInfo _Parameters_Algorithms_AStarBi = { 1, "AStarBi", "com.graphhopper.util", "Parameters$Algorithms", 0x19, 1, methods, 1, fields, 0, NULL};
  return &_Parameters_Algorithms_AStarBi;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Parameters_Algorithms_AStarBi)

@implementation Parameters_Algorithms_RoundTrip

NSString * Parameters_Algorithms_RoundTrip_DISTANCE_ = @"round_trip.distance";
NSString * Parameters_Algorithms_RoundTrip_SEED_ = @"round_trip.seed";
NSString * Parameters_Algorithms_RoundTrip_HEADING_ = @"heading";
NSString * Parameters_Algorithms_RoundTrip_INIT_MAX_RETRIES_ = @"routing.round_trip.max_retries";

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DISTANCE_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_RoundTrip_DISTANCE_,  },
    { "SEED_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_RoundTrip_SEED_,  },
    { "HEADING_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_RoundTrip_HEADING_,  },
    { "INIT_MAX_RETRIES_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Algorithms_RoundTrip_INIT_MAX_RETRIES_,  },
  };
  static const J2ObjcClassInfo _Parameters_Algorithms_RoundTrip = { 1, "RoundTrip", "com.graphhopper.util", "Parameters$Algorithms", 0x19, 1, methods, 4, fields, 0, NULL};
  return &_Parameters_Algorithms_RoundTrip;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Parameters_Algorithms_RoundTrip)

@implementation Parameters_Routing

NSString * Parameters_Routing_EDGE_BASED_ = @"edge_based";
NSString * Parameters_Routing_MAX_VISITED_NODES_ = @"max_visited_nodes";
NSString * Parameters_Routing_INIT_MAX_VISITED_NODES_ = @"routing.max_visited_nodes";
NSString * Parameters_Routing_INSTRUCTIONS_ = @"instructions";
NSString * Parameters_Routing_CALC_POINTS_ = @"calc_points";
NSString * Parameters_Routing_WAY_POINT_MAX_DISTANCE_ = @"way_point_max_distance";
NSString * Parameters_Routing_INIT_WAY_POINT_MAX_DISTANCE_ = @"routing.way_point_max_distance";
NSString * Parameters_Routing_PASS_THROUGH_ = @"pass_through";
NSString * Parameters_Routing_HEADING_PENALTY_ = @"heading_penalty";

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "EDGE_BASED_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Routing_EDGE_BASED_,  },
    { "MAX_VISITED_NODES_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Routing_MAX_VISITED_NODES_,  },
    { "INIT_MAX_VISITED_NODES_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Routing_INIT_MAX_VISITED_NODES_,  },
    { "INSTRUCTIONS_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Routing_INSTRUCTIONS_,  },
    { "CALC_POINTS_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Routing_CALC_POINTS_,  },
    { "WAY_POINT_MAX_DISTANCE_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Routing_WAY_POINT_MAX_DISTANCE_,  },
    { "INIT_WAY_POINT_MAX_DISTANCE_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Routing_INIT_WAY_POINT_MAX_DISTANCE_,  },
    { "PASS_THROUGH_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Routing_PASS_THROUGH_,  },
    { "DEFAULT_HEADING_PENALTY_", NULL, 0x19, "D", NULL, .constantValue.asDouble = Parameters_Routing_DEFAULT_HEADING_PENALTY },
    { "HEADING_PENALTY_", NULL, 0x19, "Ljava.lang.String;", &Parameters_Routing_HEADING_PENALTY_,  },
  };
  static const J2ObjcClassInfo _Parameters_Routing = { 1, "Routing", "com.graphhopper.util", "Parameters", 0x19, 1, methods, 10, fields, 0, NULL};
  return &_Parameters_Routing;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Parameters_Routing)

@implementation Parameters_CH

NSString * Parameters_CH_DISABLE_ = @"ch.disable";
NSString * Parameters_CH_INIT_DISABLING_ALLOWED_ = @"routing.ch.disabling_allowed";
NSString * Parameters_CH_FORCE_HEADING_ = @"ch.force_heading";

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DISABLE_", NULL, 0x19, "Ljava.lang.String;", &Parameters_CH_DISABLE_,  },
    { "INIT_DISABLING_ALLOWED_", NULL, 0x19, "Ljava.lang.String;", &Parameters_CH_INIT_DISABLING_ALLOWED_,  },
    { "FORCE_HEADING_", NULL, 0x19, "Ljava.lang.String;", &Parameters_CH_FORCE_HEADING_,  },
  };
  static const J2ObjcClassInfo _Parameters_CH = { 1, "CH", "com.graphhopper.util", "Parameters", 0x19, 1, methods, 3, fields, 0, NULL};
  return &_Parameters_CH;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Parameters_CH)
