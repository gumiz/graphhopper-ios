//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/util/RoundaboutInstruction.java
//

#ifndef _RoundaboutInstruction_H_
#define _RoundaboutInstruction_H_

@class InstructionAnnotation;
@class PointList;
@protocol JavaUtilMap;
@protocol Translation;

#include "J2ObjC_header.h"
#include "com/graphhopper/util/Instruction.h"

/**
 @author jansoe
 */
@interface RoundaboutInstruction : Instruction {
}

- (instancetype)initWithInt:(jint)sign
               withNSString:(NSString *)name
  withInstructionAnnotation:(InstructionAnnotation *)ia
              withPointList:(PointList *)pl;

- (RoundaboutInstruction *)increaseExitNumber;

- (RoundaboutInstruction *)setDirOfRotationWithDouble:(jdouble)deltaIn;

- (RoundaboutInstruction *)setExited;

- (jboolean)isExited;

- (jint)getExitNumber;

- (RoundaboutInstruction *)setExitNumberWithInt:(jint)exitNumber;

/**
 @return radian of angle -2PI &lt; x &lt; 2PI between roundabout entrance and exit values <ul> <li>&gt; 0 is for clockwise rotation</li> <li>&lt; 0 is for counterclockwise rotation</li> <li>NaN if direction of rotation is unclear</li> </ul>
 */
- (jdouble)getTurnAngle;

/**
 @brief The radian value between entrance (in) and exit (out) of this roundabout.
 */
- (RoundaboutInstruction *)setRadianWithDouble:(jdouble)radian;

- (id<JavaUtilMap>)getExtraInfoJSON;

- (NSString *)getTurnDescriptionWithTranslation:(id<Translation>)tr;

@end

J2OBJC_EMPTY_STATIC_INIT(RoundaboutInstruction)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef RoundaboutInstruction ComGraphhopperUtilRoundaboutInstruction;

J2OBJC_TYPE_LITERAL_HEADER(RoundaboutInstruction)

#endif // _RoundaboutInstruction_H_
