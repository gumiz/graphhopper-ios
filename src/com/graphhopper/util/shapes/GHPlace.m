//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/util/shapes/GHPlace.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/util/Helper.h"
#include "com/graphhopper/util/shapes/GHPlace.h"
#include "com/graphhopper/util/shapes/GHPoint.h"

@interface GHPlace () {
 @public
  NSString *name_;
}
@end

J2OBJC_FIELD_SETTER(GHPlace, name_, NSString *)

@implementation GHPlace

- (instancetype)init {
  if (self = [super init]) {
    GHPlace_set_name_(self, @"");
  }
  return self;
}

- (instancetype)initWithNSString:(NSString *)name {
  if (self = [super init]) {
    GHPlace_set_name_(self, @"");
    [self setNameWithNSString:name];
  }
  return self;
}

- (instancetype)initWithDouble:(jdouble)lat
                    withDouble:(jdouble)lon {
  if (self = [super initWithDouble:lat withDouble:lon]) {
    GHPlace_set_name_(self, @"");
  }
  return self;
}

- (void)setValueWithNSString:(NSString *)t {
  [self setNameWithNSString:t];
}

- (NSString *)getName {
  return name_;
}

- (GHPlace *)setNameWithNSString:(NSString *)name {
  GHPlace_set_name_(self, name);
  return self;
}

- (jboolean)isValidName {
  return !Helper_isEmptyWithNSString_(name_);
}

- (NSString *)description {
  NSString *str = @"";
  if ([self isValidName]) str = JreStrcat("$$", str, name_);
  if ([self isValid]) str = JreStrcat("$$", str, JreStrcat("CD$D", ' ', lat_, @", ", lon_));
  return [str trim];
}

- (void)dealloc {
  RELEASE_(name_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(GHPlace *)other {
  [super copyAllFieldsTo:other];
  GHPlace_set_name_(other, name_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "GHPlace", NULL, 0x1, NULL },
    { "initWithNSString:", "GHPlace", NULL, 0x1, NULL },
    { "initWithDouble:withDouble:", "GHPlace", NULL, 0x1, NULL },
    { "setValueWithNSString:", "setValue", "V", 0x1, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "setNameWithNSString:", "setName", "Lcom.graphhopper.util.shapes.GHPlace;", 0x1, NULL },
    { "isValidName", NULL, "Z", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
  };
  static const J2ObjcClassInfo _GHPlace = { 1, "GHPlace", "com.graphhopper.util.shapes", NULL, 0x1, 8, methods, 1, fields, 0, NULL};
  return &_GHPlace;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHPlace)
