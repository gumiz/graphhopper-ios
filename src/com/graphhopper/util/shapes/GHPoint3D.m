//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/util/shapes/GHPoint3D.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/graphhopper/util/NumHelper.h"
#include "com/graphhopper/util/shapes/GHPoint3D.h"
#include "java/lang/Double.h"

@implementation GHPoint3D

- (instancetype)initWithDouble:(jdouble)lat
                    withDouble:(jdouble)lon
                    withDouble:(jdouble)elevation {
  if (self = [super initWithDouble:lat withDouble:lon]) {
    self->ele_ = elevation;
  }
  return self;
}

- (jdouble)getElevation {
  return ele_;
}

- (jdouble)getEle {
  return ele_;
}

- (NSUInteger)hash {
  jint hash_ = 59 * [super hash] + (jint) (JavaLangDouble_doubleToLongBitsWithDouble_(self->ele_) ^ (URShift64(JavaLangDouble_doubleToLongBitsWithDouble_(self->ele_), 32)));
  return hash_;
}

- (jboolean)isEqual:(id)obj {
  if (obj == nil) return NO;
  GHPoint3D *other = (GHPoint3D *) check_class_cast(obj, [GHPoint3D class]);
  if (JavaLangDouble_isNaNWithDouble_(ele_)) return NumHelper_equalsEpsWithDouble_withDouble_(lat_, ((GHPoint3D *) nil_chk(other))->lat_) && NumHelper_equalsEpsWithDouble_withDouble_(lon_, other->lon_);
  else return NumHelper_equalsEpsWithDouble_withDouble_(lat_, ((GHPoint3D *) nil_chk(other))->lat_) && NumHelper_equalsEpsWithDouble_withDouble_(lon_, other->lon_) && NumHelper_equalsEpsWithDouble_withDouble_(ele_, other->ele_);
}

- (NSString *)description {
  return JreStrcat("$CD", [super description], ',', ele_);
}

- (IOSObjectArray *)toGeoJson {
  return [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(lon_), JavaLangDouble_valueOfWithDouble_(lat_), JavaLangDouble_valueOfWithDouble_(ele_) } count:3 type:JavaLangDouble_class_()];
}

- (void)copyAllFieldsTo:(GHPoint3D *)other {
  [super copyAllFieldsTo:other];
  other->ele_ = ele_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDouble:withDouble:withDouble:", "GHPoint3D", NULL, 0x1, NULL },
    { "getElevation", NULL, "D", 0x1, NULL },
    { "getEle", NULL, "D", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "toGeoJson", NULL, "[Ljava.lang.Double;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ele_", NULL, 0x1, "D", NULL,  },
  };
  static const J2ObjcClassInfo _GHPoint3D = { 1, "GHPoint3D", "com.graphhopper.util.shapes", NULL, 0x1, 7, methods, 1, fields, 0, NULL};
  return &_GHPoint3D;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GHPoint3D)
