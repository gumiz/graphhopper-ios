//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/util/EdgeIterator.java
//

#ifndef _EdgeIterator_H_
#define _EdgeIterator_H_

#include "J2ObjC_header.h"
#include "com/graphhopper/util/EdgeIteratorState.h"

#define EdgeIterator_NO_EDGE -1

/**
 @brief Iterates through all edges of one node.
 Avoids object creation in-between via direct access methods. If you want to access some properties of an 'edge' (i.e. the current state) for later usage store it via edgeIterator.detach() or edgeIterator.getEdge() instead of the iterator itself. Usage: <pre> EdgeExplorer explorer = graph.createEdgeExplorer(); EdgeIterator iter = explorer.setBaseNode(nodeId); // calls to iter.getAdjNode(), getDistance() without calling next() will cause undefined behaviour! while(iter.next()) { int baseNodeId = iter.getBaseNode(); // equal to nodeId int adjacentNodeId = iter.getAdjNode(); // this is the node where this edge state is "pointing to" ... } </pre> <p>
 @author Peter Karich
 */
@protocol EdgeIterator < EdgeIteratorState, NSObject, JavaObject >
/**
 @brief To be called to go to the next edge state.
 <p>
 @return true if an edge state is available
 */
- (jboolean)next;

@end

J2OBJC_EMPTY_STATIC_INIT(EdgeIterator)

J2OBJC_STATIC_FIELD_GETTER(EdgeIterator, NO_EDGE, jint)

#define ComGraphhopperUtilEdgeIterator EdgeIterator

J2OBJC_TYPE_LITERAL_HEADER(EdgeIterator)

@interface EdgeIterator_Edge : NSObject {
}

+ (jboolean)isValidWithInt:(jint)edgeId;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EdgeIterator_Edge)

CF_EXTERN_C_BEGIN

FOUNDATION_EXPORT jboolean EdgeIterator_Edge_isValidWithInt_(jint edgeId);
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(EdgeIterator_Edge)

#endif // _EdgeIterator_H_
