//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/util/FinishInstruction.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/graphhopper/util/FinishInstruction.h"
#include "com/graphhopper/util/Instruction.h"
#include "com/graphhopper/util/InstructionAnnotation.h"
#include "com/graphhopper/util/PointAccess.h"
#include "com/graphhopper/util/PointList.h"
#include "com/graphhopper/util/Translation.h"
#include "java/lang/Double.h"

@interface FinishInstruction_$1 () {
 @public
  jdouble val$lat_;
  jdouble val$lon_;
  jdouble val$ele_;
}
@end

@interface FinishInstruction_$2 () {
 @public
  jdouble val$lat_;
  jdouble val$lon_;
  jdouble val$ele_;
}
@end

@implementation FinishInstruction

- (instancetype)initFinishInstructionWithNSString:(NSString *)name
                                       withDouble:(jdouble)lat
                                       withDouble:(jdouble)lon
                                       withDouble:(jdouble)ele {
  return [super initWithInt:Instruction_FINISH withNSString:name withInstructionAnnotation:InstructionAnnotation_get_EMPTY_() withPointList:[[[FinishInstruction_$1 alloc] initWithInt:2 withBoolean:!JavaLangDouble_isNaNWithDouble_(ele) withDouble:lat withDouble:lon withDouble:ele] autorelease]];
}

- (instancetype)initWithNSString:(NSString *)name
                      withDouble:(jdouble)lat
                      withDouble:(jdouble)lon
                      withDouble:(jdouble)ele {
  return [self initFinishInstructionWithNSString:name withDouble:lat withDouble:lon withDouble:ele];
}

- (instancetype)initFinishInstructionWithDouble:(jdouble)lat
                                     withDouble:(jdouble)lon
                                     withDouble:(jdouble)ele {
  return [super initWithInt:Instruction_FINISH withNSString:@"" withInstructionAnnotation:InstructionAnnotation_get_EMPTY_() withPointList:[[[FinishInstruction_$2 alloc] initWithInt:2 withBoolean:!JavaLangDouble_isNaNWithDouble_(ele) withDouble:lat withDouble:lon withDouble:ele] autorelease]];
}

- (instancetype)initWithDouble:(jdouble)lat
                    withDouble:(jdouble)lon
                    withDouble:(jdouble)ele {
  return [self initFinishInstructionWithDouble:lat withDouble:lon withDouble:ele];
}

- (instancetype)initWithNSString:(NSString *)name
                 withPointAccess:(id<PointAccess>)pointAccess
                         withInt:(jint)node {
  return [self initFinishInstructionWithNSString:name withDouble:[((id<PointAccess>) nil_chk(pointAccess)) getLatitudeWithInt:node] withDouble:[pointAccess getLongitudeWithInt:node] withDouble:[pointAccess is3D] ? [pointAccess getElevationWithInt:node] : JavaLangDouble_NaN];
}

- (instancetype)initWithPointAccess:(id<PointAccess>)pointAccess
                            withInt:(jint)node {
  return [self initFinishInstructionWithDouble:[((id<PointAccess>) nil_chk(pointAccess)) getLatitudeWithInt:node] withDouble:[pointAccess getLongitudeWithInt:node] withDouble:[pointAccess is3D] ? [pointAccess getElevationWithInt:node] : JavaLangDouble_NaN];
}

- (NSString *)getTurnDescriptionWithTranslation:(id<Translation>)tr {
  if (rawName_) return [self getName];
  return [((id<Translation>) nil_chk(tr)) trWithNSString:@"finish" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withDouble:withDouble:withDouble:", "FinishInstruction", NULL, 0x1, NULL },
    { "initWithDouble:withDouble:withDouble:", "FinishInstruction", NULL, 0x1, NULL },
    { "initWithNSString:withPointAccess:withInt:", "FinishInstruction", NULL, 0x1, NULL },
    { "initWithPointAccess:withInt:", "FinishInstruction", NULL, 0x1, NULL },
    { "getTurnDescriptionWithTranslation:", "getTurnDescription", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcClassInfo _FinishInstruction = { 1, "FinishInstruction", "com.graphhopper.util", NULL, 0x1, 5, methods, 0, NULL, 0, NULL};
  return &_FinishInstruction;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FinishInstruction)

@implementation FinishInstruction_$1

- (instancetype)initWithInt:(jint)arg$0
                withBoolean:(jboolean)arg$1
                 withDouble:(jdouble)capture$0
                 withDouble:(jdouble)capture$1
                 withDouble:(jdouble)capture$2 {
  val$lat_ = capture$0;
  val$lon_ = capture$1;
  val$ele_ = capture$2;
  if (self = [super initWithInt:arg$0 withBoolean:arg$1]) {
    {
      [self addWithDouble:val$lat_ withDouble:val$lon_ withDouble:val$ele_];
    }
  }
  return self;
}

- (void)copyAllFieldsTo:(FinishInstruction_$1 *)other {
  [super copyAllFieldsTo:other];
  other->val$lat_ = val$lat_;
  other->val$lon_ = val$lon_;
  other->val$ele_ = val$ele_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withBoolean:withDouble:withDouble:withDouble:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$lat_", NULL, 0x1012, "D", NULL,  },
    { "val$lon_", NULL, 0x1012, "D", NULL,  },
    { "val$ele_", NULL, 0x1012, "D", NULL,  },
  };
  static const J2ObjcClassInfo _FinishInstruction_$1 = { 1, "$1", "com.graphhopper.util", "FinishInstruction", 0x8000, 1, methods, 3, fields, 0, NULL};
  return &_FinishInstruction_$1;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FinishInstruction_$1)

@implementation FinishInstruction_$2

- (instancetype)initWithInt:(jint)arg$0
                withBoolean:(jboolean)arg$1
                 withDouble:(jdouble)capture$0
                 withDouble:(jdouble)capture$1
                 withDouble:(jdouble)capture$2 {
  val$lat_ = capture$0;
  val$lon_ = capture$1;
  val$ele_ = capture$2;
  if (self = [super initWithInt:arg$0 withBoolean:arg$1]) {
    {
      [self addWithDouble:val$lat_ withDouble:val$lon_ withDouble:val$ele_];
    }
  }
  return self;
}

- (void)copyAllFieldsTo:(FinishInstruction_$2 *)other {
  [super copyAllFieldsTo:other];
  other->val$lat_ = val$lat_;
  other->val$lon_ = val$lon_;
  other->val$ele_ = val$ele_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withBoolean:withDouble:withDouble:withDouble:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$lat_", NULL, 0x1012, "D", NULL,  },
    { "val$lon_", NULL, 0x1012, "D", NULL,  },
    { "val$ele_", NULL, 0x1012, "D", NULL,  },
  };
  static const J2ObjcClassInfo _FinishInstruction_$2 = { 1, "$2", "com.graphhopper.util", "FinishInstruction", 0x8000, 1, methods, 3, fields, 0, NULL};
  return &_FinishInstruction_$2;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(FinishInstruction_$2)
