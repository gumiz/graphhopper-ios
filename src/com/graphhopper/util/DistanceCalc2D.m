//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/util/DistanceCalc2D.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/util/DistanceCalc2D.h"
#include "java/lang/Math.h"

@implementation DistanceCalc2D

- (jdouble)calcDistWithDouble:(jdouble)fromY
                   withDouble:(jdouble)fromX
                   withDouble:(jdouble)toY
                   withDouble:(jdouble)toX {
  return JavaLangMath_sqrtWithDouble_([self calcNormalizedDistWithDouble:fromY withDouble:fromX withDouble:toY withDouble:toX]);
}

- (jdouble)calcDenormalizedDistWithDouble:(jdouble)normedDist {
  return JavaLangMath_sqrtWithDouble_(normedDist);
}

- (jdouble)calcNormalizedDistWithDouble:(jdouble)dist {
  return dist * dist;
}

- (jdouble)calcNormalizedDistWithDouble:(jdouble)fromY
                             withDouble:(jdouble)fromX
                             withDouble:(jdouble)toY
                             withDouble:(jdouble)toX {
  jdouble dX = fromX - toX;
  jdouble dY = fromY - toY;
  return dX * dX + dY * dY;
}

- (NSString *)description {
  return @"2D";
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calcDistWithDouble:withDouble:withDouble:withDouble:", "calcDist", "D", 0x1, NULL },
    { "calcDenormalizedDistWithDouble:", "calcDenormalizedDist", "D", 0x1, NULL },
    { "calcNormalizedDistWithDouble:", "calcNormalizedDist", "D", 0x1, NULL },
    { "calcNormalizedDistWithDouble:withDouble:withDouble:withDouble:", "calcNormalizedDist", "D", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _DistanceCalc2D = { 1, "DistanceCalc2D", "com.graphhopper.util", NULL, 0x1, 6, methods, 0, NULL, 0, NULL};
  return &_DistanceCalc2D;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DistanceCalc2D)
