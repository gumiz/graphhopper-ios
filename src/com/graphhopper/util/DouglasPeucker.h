//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/util/DouglasPeucker.java
//

#ifndef _DouglasPeucker_H_
#define _DouglasPeucker_H_

@class PointList;
@protocol DistanceCalc;

#include "J2ObjC_header.h"

/**
 @brief Simplyfies a list of 2D points which are not too far away. http://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm <p> Calling simplify is thread safe.
 <p>
 @author Peter Karich
 */
@interface DouglasPeucker : NSObject {
}

- (instancetype)init;

- (void)setApproximationWithBoolean:(jboolean)a;

/**
 @brief maximum distance of discrepancy (from the normal way) in meter
 */
- (DouglasPeucker *)setMaxDistanceWithDouble:(jdouble)dist;

/**
 @brief This method removes points which are close to the line (defined by maxDist).
 <p>
 @return removed nodes
 */
- (jint)simplifyWithPointList:(PointList *)points;

/**
 @brief compress list: move points into EMPTY slots
 */
- (void)compressNewWithPointList:(PointList *)points
                         withInt:(jint)removed;

- (jint)simplifyWithPointList:(PointList *)points
                      withInt:(jint)fromIndex
                      withInt:(jint)lastIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(DouglasPeucker)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

typedef DouglasPeucker ComGraphhopperUtilDouglasPeucker;

J2OBJC_TYPE_LITERAL_HEADER(DouglasPeucker)

#endif // _DouglasPeucker_H_
