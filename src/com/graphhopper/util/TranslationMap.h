//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/util/TranslationMap.java
//

#ifndef _TranslationMap_H_
#define _TranslationMap_H_

@class IOSObjectArray;
@class JavaIoFile;
@class JavaIoInputStream;
@class JavaUtilLocale;
@protocol JavaUtilList;
@protocol JavaUtilMap;

#include "J2ObjC_header.h"
#include "com/graphhopper/util/Translation.h"

/**
 @brief A class which manages the translations in-memory.
 See here for more information: ./docs/core/translations.md <p>
 @author Peter Karich
 */
@interface TranslationMap : NSObject {
}

+ (jint)countOccurenceWithNSString:(NSString *)phrase
                      withNSString:(NSString *)splitter;

/**
 @brief This loads the translation files from the specified folder.
 */
- (TranslationMap *)doImportWithJavaIoFile:(JavaIoFile *)folder;

/**
 @brief This loads the translation files from classpath.
 */
- (TranslationMap *)doImport;

- (void)addWithTranslation:(id<Translation>)tr;

/**
 @brief Returns the Translation object for the specified locale and falls back to english if the locale was not found.
 */
- (id<Translation>)getWithFallBackWithJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Returns the Translation object for the specified locale and returns null if not found.
 */
- (id<Translation>)getWithNSString:(NSString *)locale;

- (NSString *)description;

- (instancetype)init;

@end

FOUNDATION_EXPORT BOOL TranslationMap_initialized;
J2OBJC_STATIC_INIT(TranslationMap)

CF_EXTERN_C_BEGIN

FOUNDATION_EXPORT jint TranslationMap_countOccurenceWithNSString_withNSString_(NSString *phrase, NSString *splitter);

FOUNDATION_EXPORT id<JavaUtilList> TranslationMap_LOCALES_;
J2OBJC_STATIC_FIELD_GETTER(TranslationMap, LOCALES_, id<JavaUtilList>)
CF_EXTERN_C_END

typedef TranslationMap ComGraphhopperUtilTranslationMap;

J2OBJC_TYPE_LITERAL_HEADER(TranslationMap)

@interface TranslationMap_TranslationHashMap : NSObject < Translation > {
 @public
  JavaUtilLocale *locale_;
}

- (instancetype)initWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)clear;

- (JavaUtilLocale *)getLocale;

- (NSString *)getLanguage;

- (NSString *)trWithNSString:(NSString *)key
           withNSObjectArray:(IOSObjectArray *)params;

- (TranslationMap_TranslationHashMap *)putWithNSString:(NSString *)key
                                          withNSString:(NSString *)val;

- (NSString *)description;

- (id<JavaUtilMap>)asMap;

- (TranslationMap_TranslationHashMap *)doImportWithJavaIoInputStream:(JavaIoInputStream *)is;

@end

J2OBJC_EMPTY_STATIC_INIT(TranslationMap_TranslationHashMap)

J2OBJC_FIELD_SETTER(TranslationMap_TranslationHashMap, locale_, JavaUtilLocale *)

CF_EXTERN_C_BEGIN
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(TranslationMap_TranslationHashMap)

#endif // _TranslationMap_H_
