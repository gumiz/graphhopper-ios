//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: graphhopper/core/src/main/java/com/graphhopper/util/exceptions/DetailedIllegalArgumentException.java
//

#include "J2ObjC_source.h"
#include "com/graphhopper/util/exceptions/DetailedIllegalArgumentException.h"
#include "java/util/Map.h"

@interface ComGraphhopperUtilExceptionsDetailedIllegalArgumentException () {
 @public
  id<JavaUtilMap> details_;
}
@end

J2OBJC_FIELD_SETTER(ComGraphhopperUtilExceptionsDetailedIllegalArgumentException, details_, id<JavaUtilMap>)

@implementation ComGraphhopperUtilExceptionsDetailedIllegalArgumentException

- (instancetype)initWithNSString:(NSString *)var1
                 withJavaUtilMap:(id<JavaUtilMap>)details {
  if (self = [super initWithNSString:var1]) {
    ComGraphhopperUtilExceptionsDetailedIllegalArgumentException_set_details_(self, details);
  }
  return self;
}

- (id<JavaUtilMap>)getDetails {
  return details_;
}

- (void)dealloc {
  RELEASE_(details_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ComGraphhopperUtilExceptionsDetailedIllegalArgumentException *)other {
  [super copyAllFieldsTo:other];
  ComGraphhopperUtilExceptionsDetailedIllegalArgumentException_set_details_(other, details_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withJavaUtilMap:", "DetailedIllegalArgumentException", NULL, 0x1, NULL },
    { "getDetails", NULL, "Ljava.util.Map;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "details_", NULL, 0x12, "Ljava.util.Map;", NULL,  },
  };
  static const J2ObjcClassInfo _ComGraphhopperUtilExceptionsDetailedIllegalArgumentException = { 1, "DetailedIllegalArgumentException", "com.graphhopper.util.exceptions", NULL, 0x1, 2, methods, 1, fields, 0, NULL};
  return &_ComGraphhopperUtilExceptionsDetailedIllegalArgumentException;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGraphhopperUtilExceptionsDetailedIllegalArgumentException)
